{"version":3,"sources":["../tmp/directives/drawing-manager.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAU,MAAA,eAAA,CAAA;AAEnB,OAAO,EAAE,gBAAA,EAAiB,MAAA,sBAAA,CAAA;AAC1B,OAAO,EAAE,gBAAA,EAAiB,MAAA,kCAAA,CAAA;AAE1B,MAAM,gBAAW,CAAX,MAAA,GAAS;IACb,SAAS;IACT,eAAe,EAAE,gBAAA,EAAkB,uBAAA,EAAyB,aAAA;IAC5D,KAAK,EAAE,eAAA,EAAiB,gBAAA,EAAkB,iBAAA,EAAmB,kBAAA;CAC9D,CAAC;AACF,MAAM,gBAAY,CAAZ,OAAA,GAAU;IACd,gBAAgB,EAAE,gBAAA,EAAkB,iBAAA;IACpC,iBAAiB,EAAE,kBAAA,EAAoB,mBAAA;CACxC,CAAC;AACF,MAEC,qBAAA,SAAA,gBAAA;IAeD;;OAEG;IACH,YAGG,WAAwB;QAFvB,KAAK,CAAC,WAAW,EAAE,gBAAgB,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;IAC/B,CAAC;;AAII,yBAAA,GAAoC;IAF3C,EAGE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAFvB,QAAQ,EAGE,4BAAA;gBAFV,MAAM,EAGE,MAAA;gBAFR,OAAO,EAGE,OAAA;aAFV,EAGC,EAAG;CAFJ,CAGC;AAFF;;GAEG;AAEF,6BAAA,GAAA,GAAA,EAAA,CAAA;IAAD,EAAC,IAAI,EAAE,gBAAgB,GAAG;CACzB,CAAC;AAGF;IACA,gBAAgB;IAChB,cAAc,CAAC,UAAU,CAAC;IAC1B;;;OAGG;IACH,cAAc,CAAC,cAAc,CAAC;IAC9B,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC;IACjC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,aAAa,CAAC;IACvC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,cAAc,CAAC;IACxC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,qBAAqB,CAAC;IAC/C,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;IACrC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC;IAC7B,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,aAAa,CAAC;IACvC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,cAAc,CAAC;IACxC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,eAAe,CAAC;IACzC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,gBAAgB,CAAC;IAC1C,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,cAAc,CAAC;IACxC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,cAAc,CAAC;IACxC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,eAAe,CAAC;IACzC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,eAAe,CAAC;IACzC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,gBAAgB,CAAC;IAC1C,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,iBAAiB,CAAC;AAC3C,CAAC","file":"drawing-manager.js","sourceRoot":"","sourcesContent":["import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [\n  'options',\n  'circleOptions', 'drawingControl', 'drawingControlOptions', 'drawingMode',\n  'map', 'markerOptions', 'polygonOptions', 'polylineOptions', 'rectangleOptions'\n];\nconst /** @type {?} */ OUTPUTS = [\n  'circlecomplete', 'markercomplete', 'overlaycomplete',\n  'polygoncomplete', 'polylinecomplete', 'rectanglecomplete'\n];\nexport class DrawingManager extends BaseMapDirective {\npublic options: any;\npublic circleOptions: any;\npublic drawingControl: any;\npublic drawingControlOptions: any;\npublic drawingMode: any;\npublic map: any;\npublic markerOptions: any;\npublic polygonOptions: any;\npublic polylineOptions: any;\npublic rectangleOptions: any;\npublic circlecomplete: any;\npublic markercomplete: any;\npublic overlaycomplete: any;\npublic polygoncomplete: any;\npublic polylinecomplete: any;\npublic rectanglecomplete: any;\n/**\n * @param {?} nguiMapComp\n */\nconstructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'DrawingManager', INPUTS, OUTPUTS);\n    this.libraryName = 'drawing';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map > drawing-manager',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction DrawingManager_tsickle_Closure_declarations() {\n/** @type {?} */\nDrawingManager.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDrawingManager.ctorParameters;\n/** @type {?} */\nDrawingManager.prototype.options;\n/** @type {?} */\nDrawingManager.prototype.circleOptions;\n/** @type {?} */\nDrawingManager.prototype.drawingControl;\n/** @type {?} */\nDrawingManager.prototype.drawingControlOptions;\n/** @type {?} */\nDrawingManager.prototype.drawingMode;\n/** @type {?} */\nDrawingManager.prototype.map;\n/** @type {?} */\nDrawingManager.prototype.markerOptions;\n/** @type {?} */\nDrawingManager.prototype.polygonOptions;\n/** @type {?} */\nDrawingManager.prototype.polylineOptions;\n/** @type {?} */\nDrawingManager.prototype.rectangleOptions;\n/** @type {?} */\nDrawingManager.prototype.circlecomplete;\n/** @type {?} */\nDrawingManager.prototype.markercomplete;\n/** @type {?} */\nDrawingManager.prototype.overlaycomplete;\n/** @type {?} */\nDrawingManager.prototype.polygoncomplete;\n/** @type {?} */\nDrawingManager.prototype.polylinecomplete;\n/** @type {?} */\nDrawingManager.prototype.rectanglecomplete;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}