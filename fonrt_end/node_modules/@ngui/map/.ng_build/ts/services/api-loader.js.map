{"version":3,"sources":["../tmp/services/api-loader.ts"],"names":[],"mappings":"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","file":"api-loader.js","sourceRoot":"","sourcesContent":["import { Injectable, Inject, Optional, NgZone, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { NG_MAP_CONFIG_TOKEN } from './config';\nimport { isMapsApiLoaded } from './util';\nimport { first } from 'rxjs/operator/first';\n/**\n * @abstract\n */\nexport abstract class NgMapApiLoader implements OnDestroy {\n  api$: ReplaySubject<any> = first.call(new ReplaySubject(1));\n/**\n * @abstract\n * @return {?}\n */\nload() {}\n/**\n * @param {?} config\n */\nconstructor(protected config) {\n    this.config = this.config || {apiUrl: 'https://maps.google.com/maps/api/js'};\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.api$.complete();\n  }\n}\n\nfunction NgMapApiLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nNgMapApiLoader.prototype.api$;\n/** @type {?} */\nNgMapApiLoader.prototype.config;\n}\n\nexport class NgMapAsyncCallbackApiLoader extends NgMapApiLoader {\n/**\n * @param {?} zone\n * @param {?} config\n */\nconstructor(protected zone: NgZone,   config) {\n    super(config);\n  }\n/**\n * @return {?}\n */\nload() {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    if (isMapsApiLoaded()) {\n      this.api$.next(google.maps);\n    } else if (!document.querySelector('#ngui-map-api')) {\n      ( /** @type {?} */((<any>window)))['nguiMapRef'] = ( /** @type {?} */((<any>window)))['nguiMapRef'] || [];\n      ( /** @type {?} */((<any>window)))['nguiMapRef'].push({ zone: this.zone, componentFn: () => this.api$.next(google.maps)});\n      this.addGoogleMapsApi();\n    }\n  }\n/**\n * @return {?}\n */\nprivate addGoogleMapsApi() {\n    ( /** @type {?} */((<any>window)))['initNguiMap'] = ( /** @type {?} */((<any>window)))['initNguiMap'] || function() {\n      ( /** @type {?} */((<any>window)))['nguiMapRef'].forEach(nguiMapRef => {\n        nguiMapRef.zone.run(function() { nguiMapRef.componentFn(); });\n      });\n      ( /** @type {?} */((<any>window)))['nguiMapRef'].splice(0, ( /** @type {?} */((<any>window)))['nguiMapRef'].length);\n    };\n\n    let /** @type {?} */ script = document.createElement( 'script' );\n    script.id = 'ngui-map-api';\n\n    // script.src = \"https://maps.google.com/maps/api/js?callback=initNguiMap\";\n    let /** @type {?} */ apiUrl = this.config.apiUrl ;\n    apiUrl += apiUrl.indexOf('?') !== -1 ? '&' : '?';\n    script.src = apiUrl + 'callback=initNguiMap';\n    document.querySelector('body').appendChild(script);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MAP_CONFIG_TOKEN, ] }, ]},\n];\n}\n\nfunction NgMapAsyncCallbackApiLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nNgMapAsyncCallbackApiLoader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgMapAsyncCallbackApiLoader.ctorParameters;\n/** @type {?} */\nNgMapAsyncCallbackApiLoader.prototype.zone;\n}\n\nexport class NgMapAsyncApiLoader extends NgMapApiLoader {\n/**\n * @param {?} config\n */\nconstructor(  config) {\n    super(config);\n  }\n/**\n * @return {?}\n */\nload() {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    if (isMapsApiLoaded()) {\n      this.api$.next(google.maps);\n    } else if (!document.querySelector('#ngui-map-api')) {\n      let /** @type {?} */ script = document.createElement('script');\n      script.id = 'ngui-map-api';\n\n      script.async = true;\n      script.onload = () => this.api$.next(google.maps);\n      script.src = this.config.apiUrl;\n      document.querySelector('body').appendChild(script);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MAP_CONFIG_TOKEN, ] }, ]},\n];\n}\n\nfunction NgMapAsyncApiLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nNgMapAsyncApiLoader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgMapAsyncApiLoader.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}