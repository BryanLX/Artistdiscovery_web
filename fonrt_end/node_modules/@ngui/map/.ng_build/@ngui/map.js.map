{"version":3,"file":"map.js","sources":["../ts/tmp/map.ts","../ts/tmp/ngui-map.module.ts","../ts/tmp/directives/transit-layer.ts","../ts/tmp/directives/traffic-layer.ts","../ts/tmp/directives/street-view-panorama.ts","../ts/tmp/directives/polyline.ts","../ts/tmp/directives/polygon.ts","../ts/tmp/directives/places-auto-complete.ts","../ts/tmp/directives/marker.ts","../ts/tmp/directives/kml-layer.ts","../ts/tmp/directives/heatmap-layer.ts","../ts/tmp/directives/ground-overlay.ts","../ts/tmp/directives/drawing-manager.ts","../ts/tmp/directives/directions-renderer.ts","../ts/tmp/directives/data-layer.ts","../ts/tmp/directives/circle.ts","../ts/tmp/components/custom-marker.ts","../ts/tmp/components/info-window.ts","../ts/tmp/directives/bicycling-layer.ts","../ts/tmp/components/ngui-map.component.ts","../ts/tmp/services/ngui-map.ts","../ts/tmp/services/geo-coder.ts","../ts/tmp/services/api-loader.ts","../ts/tmp/services/config.ts","../ts/tmp/services/navigator-geolocation.ts","../ts/tmp/services/option-builder.ts","../ts/tmp/services/util.ts","../ts/tmp/directives/base-map-directive.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {BicyclingLayer,NavigatorGeolocation,OptionBuilder,NG_MAP_CONFIG_TOKEN,ConfigOption,NgMapApiLoader,NgMapAsyncApiLoader,NgMapAsyncCallbackApiLoader,NguiMapComponent,InfoWindow,CustomMarker,Circle,DataLayer,DirectionsRenderer,DrawingManager,GeoCoder,GroundOverlay,HeatmapLayer,KmlLayer,Marker,NguiMap,PlacesAutoComplete,Polygon,Polyline,StreetViewPanorama,TrafficLayer,TransitLayer,NguiMapModule} from './index';\n\nexport {BaseMapDirective as Éµa} from './directives/base-map-directive';","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OptionBuilder } from './services/option-builder';\nimport { GeoCoder } from './services/geo-coder';\nimport { NavigatorGeolocation } from './services/navigator-geolocation';\nimport { NG_MAP_CONFIG_TOKEN, ConfigOption } from './services/config';\nimport { NgMapApiLoader, NgMapAsyncCallbackApiLoader } from './services/api-loader';\n\nimport { NguiMapComponent } from './components/ngui-map.component';\nimport { InfoWindow } from './components/info-window';\nimport { CustomMarker } from './components/custom-marker';\n\nimport { BicyclingLayer } from './directives/bicycling-layer';\nimport { Circle } from './directives/circle';\nimport { DataLayer } from './directives/data-layer';\nimport { DirectionsRenderer } from './directives/directions-renderer';\nimport { DrawingManager } from './directives/drawing-manager';\nimport { GroundOverlay } from './directives/ground-overlay';\nimport { HeatmapLayer } from './directives/heatmap-layer';\nimport { KmlLayer } from './directives/kml-layer';\nimport { Marker } from './directives/marker';\nimport { NguiMap } from './services/ngui-map';\nimport { PlacesAutoComplete } from './directives/places-auto-complete';\nimport { Polygon } from './directives/polygon';\nimport { Polyline } from './directives/polyline';\nimport { StreetViewPanorama } from './directives/street-view-panorama';\nimport { TrafficLayer } from './directives/traffic-layer';\nimport { TransitLayer } from './directives/transit-layer';\n\nconst /** @type {?} */ COMPONENTS_DIRECTIVES = [\n  NguiMapComponent, InfoWindow,\n  Marker, Circle, CustomMarker, Polygon, InfoWindow, Polyline, GroundOverlay,\n  TransitLayer, TrafficLayer, HeatmapLayer, BicyclingLayer, KmlLayer, DataLayer,\n  StreetViewPanorama, PlacesAutoComplete, DirectionsRenderer,\n  DrawingManager,\n];\nexport class NguiMapModule {\n/**\n * @param {?=} config\n * @return {?}\n */\nstatic forRoot(config: ConfigOption = {}): ModuleWithProviders {\n    return {\n      ngModule: NguiMapModule,\n      providers: [\n        { provide: NG_MAP_CONFIG_TOKEN, useValue: config }\n      ],\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [ CommonModule ],\n  declarations: COMPONENTS_DIRECTIVES,\n  exports: [COMPONENTS_DIRECTIVES],\n  providers: [\n    GeoCoder,\n    NavigatorGeolocation,\n    NguiMap,\n    OptionBuilder,\n    {provide: NgMapApiLoader, useClass: NgMapAsyncCallbackApiLoader},\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NguiMapModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNguiMapModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNguiMapModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [];\nconst /** @type {?} */ OUTPUTS = [ ];\nexport class TransitLayer extends BaseMapDirective {\n/**\n * @param {?} nguiMapComp\n */\nconstructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'TransitLayer', INPUTS, OUTPUTS);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map > transit-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction TransitLayer_tsickle_Closure_declarations() {\n/** @type {?} */\nTransitLayer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTransitLayer.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = ['autoRefresh', 'options' ];\nconst /** @type {?} */ OUTPUTS = [ ];\nexport class TrafficLayer extends BaseMapDirective {\npublic autoRefresh: any;\npublic options: any;\n/**\n * @param {?} nguiMapComp\n */\nconstructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'TrafficLayer', INPUTS, OUTPUTS);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map > traffic-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction TrafficLayer_tsickle_Closure_declarations() {\n/** @type {?} */\nTrafficLayer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTrafficLayer.ctorParameters;\n/** @type {?} */\nTrafficLayer.prototype.autoRefresh;\n/** @type {?} */\nTrafficLayer.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Directive, OnDestroy} from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [\n  'selector', 'options',\n  'addressControl', 'addressControlOptions', 'clickToGo', 'disableDefaultUI', 'disableDoubleClickZoom',\n  'enableCloseButton', 'fullscreenControl', 'fullscreenControlOptions', 'imageDateControl', 'linksControl',\n  'motionTracking', 'motionTrackingControl', 'panControl', 'panControlOptions', 'pano',\n  'position', 'pov', 'scrollwheel', 'showRoadLabels', 'visible', 'zoomControl', 'zoomControlOptions'\n];\nconst /** @type {?} */ OUTPUTS = [\n  'closeclick', 'pano_changed', 'position_changed', 'pov_changed', 'resize', 'status_changed',\n  'visible_changed', 'zoom_changed'\n];\nexport class StreetViewPanorama extends BaseMapDirective implements OnDestroy {\npublic selector: any;\npublic options: any;\npublic addressControl: any;\npublic addressControlOptions: any;\npublic clickToGo: any;\npublic disableDefaultUI: any;\npublic disableDoubleClickZoom: any;\npublic enableCloseButton: any;\npublic fullscreenControl: any;\npublic fullscreenControlOptions: any;\npublic imageDateControl: any;\npublic linksControl: any;\npublic motionTracking: any;\npublic motionTrackingControl: any;\npublic panControl: any;\npublic panControlOptions: any;\npublic pano: any;\npublic position: any;\npublic pov: any;\npublic scrollwheel: any;\npublic showRoadLabels: any;\npublic visible: any;\npublic zoomControl: any;\npublic zoomControlOptions: any;\npublic closeclick: any;\npublic pano_changed: any;\npublic position_changed: any;\npublic pov_changed: any;\npublic resize: any;\npublic status_changed: any;\npublic visible_changed: any;\npublic zoom_changed: any;\n/**\n * @param {?} nguiMapComp\n */\nconstructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'StreetViewPanorama', INPUTS, OUTPUTS);\n  }\n/**\n * @return {?}\n */\ninitialize(): void {\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\n\n    let /** @type {?} */ element: HTMLElement;\n    if (this.objectOptions.selector) {\n      // noinspection TypeScriptValidateTypes\n      element = document.querySelector(this['selector']);\n      delete this.objectOptions.selector;\n    } else {\n      element = this.nguiMapComponent.el;\n    }\n\n    // will be set after geocoded\n    typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n\n    this.mapObject = new google.maps[this.mapObjectName](element, this.objectOptions);\n    this.mapObject['mapObjectName'] = this.mapObjectName;\n    this.mapObject['nguiMapComponent'] = this.nguiMapComponent;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this.nguiMapComponent.el) {\n      this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map > street-view-panorama',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction StreetViewPanorama_tsickle_Closure_declarations() {\n/** @type {?} */\nStreetViewPanorama.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStreetViewPanorama.ctorParameters;\n/** @type {?} */\nStreetViewPanorama.prototype.selector;\n/** @type {?} */\nStreetViewPanorama.prototype.options;\n/** @type {?} */\nStreetViewPanorama.prototype.addressControl;\n/** @type {?} */\nStreetViewPanorama.prototype.addressControlOptions;\n/** @type {?} */\nStreetViewPanorama.prototype.clickToGo;\n/** @type {?} */\nStreetViewPanorama.prototype.disableDefaultUI;\n/** @type {?} */\nStreetViewPanorama.prototype.disableDoubleClickZoom;\n/** @type {?} */\nStreetViewPanorama.prototype.enableCloseButton;\n/** @type {?} */\nStreetViewPanorama.prototype.fullscreenControl;\n/** @type {?} */\nStreetViewPanorama.prototype.fullscreenControlOptions;\n/** @type {?} */\nStreetViewPanorama.prototype.imageDateControl;\n/** @type {?} */\nStreetViewPanorama.prototype.linksControl;\n/** @type {?} */\nStreetViewPanorama.prototype.motionTracking;\n/** @type {?} */\nStreetViewPanorama.prototype.motionTrackingControl;\n/** @type {?} */\nStreetViewPanorama.prototype.panControl;\n/** @type {?} */\nStreetViewPanorama.prototype.panControlOptions;\n/** @type {?} */\nStreetViewPanorama.prototype.pano;\n/** @type {?} */\nStreetViewPanorama.prototype.position;\n/** @type {?} */\nStreetViewPanorama.prototype.pov;\n/** @type {?} */\nStreetViewPanorama.prototype.scrollwheel;\n/** @type {?} */\nStreetViewPanorama.prototype.showRoadLabels;\n/** @type {?} */\nStreetViewPanorama.prototype.visible;\n/** @type {?} */\nStreetViewPanorama.prototype.zoomControl;\n/** @type {?} */\nStreetViewPanorama.prototype.zoomControlOptions;\n/** @type {?} */\nStreetViewPanorama.prototype.closeclick;\n/** @type {?} */\nStreetViewPanorama.prototype.pano_changed;\n/** @type {?} */\nStreetViewPanorama.prototype.position_changed;\n/** @type {?} */\nStreetViewPanorama.prototype.pov_changed;\n/** @type {?} */\nStreetViewPanorama.prototype.resize;\n/** @type {?} */\nStreetViewPanorama.prototype.status_changed;\n/** @type {?} */\nStreetViewPanorama.prototype.visible_changed;\n/** @type {?} */\nStreetViewPanorama.prototype.zoom_changed;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [\n  'clickable', 'draggable', 'editable', 'geodesic', 'icons', 'path', 'strokeColor',\n  'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'options'\n];\nconst /** @type {?} */ OUTPUTS = [\n  'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n  'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'\n];\nexport class Polyline extends BaseMapDirective {\npublic clickable: any;\npublic draggable: any;\npublic editable: any;\npublic geodesic: any;\npublic icons: any;\npublic path: any;\npublic strokeColor: any;\npublic strokeOpacity: any;\npublic strokeWeight: any;\npublic visible: any;\npublic zIndex: any;\npublic options: any;\npublic click: any;\npublic dblclick: any;\npublic drag: any;\npublic dragend: any;\npublic dragstart: any;\npublic mousedown: any;\npublic mousemove: any;\npublic mouseout: any;\npublic mouseover: any;\npublic mouseup: any;\npublic rightclick: any;\n/**\n * @param {?} nguiMapComp\n */\nconstructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Polyline', INPUTS, OUTPUTS);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map > polyline',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction Polyline_tsickle_Closure_declarations() {\n/** @type {?} */\nPolyline.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPolyline.ctorParameters;\n/** @type {?} */\nPolyline.prototype.clickable;\n/** @type {?} */\nPolyline.prototype.draggable;\n/** @type {?} */\nPolyline.prototype.editable;\n/** @type {?} */\nPolyline.prototype.geodesic;\n/** @type {?} */\nPolyline.prototype.icons;\n/** @type {?} */\nPolyline.prototype.path;\n/** @type {?} */\nPolyline.prototype.strokeColor;\n/** @type {?} */\nPolyline.prototype.strokeOpacity;\n/** @type {?} */\nPolyline.prototype.strokeWeight;\n/** @type {?} */\nPolyline.prototype.visible;\n/** @type {?} */\nPolyline.prototype.zIndex;\n/** @type {?} */\nPolyline.prototype.options;\n/** @type {?} */\nPolyline.prototype.click;\n/** @type {?} */\nPolyline.prototype.dblclick;\n/** @type {?} */\nPolyline.prototype.drag;\n/** @type {?} */\nPolyline.prototype.dragend;\n/** @type {?} */\nPolyline.prototype.dragstart;\n/** @type {?} */\nPolyline.prototype.mousedown;\n/** @type {?} */\nPolyline.prototype.mousemove;\n/** @type {?} */\nPolyline.prototype.mouseout;\n/** @type {?} */\nPolyline.prototype.mouseover;\n/** @type {?} */\nPolyline.prototype.mouseup;\n/** @type {?} */\nPolyline.prototype.rightclick;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [\n  'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'paths',\n  'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n];\nconst /** @type {?} */ OUTPUTS = [\n  'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'mousedown',\n  'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick',\n];\nexport class Polygon extends BaseMapDirective {\npublic clickable: any;\npublic draggable: any;\npublic editable: any;\npublic fillColor: any;\npublic fillOpacity: any;\npublic geodesic: any;\npublic paths: any;\npublic strokeColor: any;\npublic strokeOpacity: any;\npublic strokePosition: any;\npublic strokeWeight: any;\npublic visible: any;\npublic zIndex: any;\npublic options: any;\npublic click: any;\npublic dblclick: any;\npublic drag: any;\npublic dragend: any;\npublic dragstart: any;\npublic mousedown: any;\npublic mousemove: any;\npublic mouseout: any;\npublic mouseover: any;\npublic mouseup: any;\npublic rightclick: any;\n/**\n * @param {?} nguiMapComp\n */\nconstructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Polygon', INPUTS, OUTPUTS);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map>polygon, ngui-map>map-polygon',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction Polygon_tsickle_Closure_declarations() {\n/** @type {?} */\nPolygon.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPolygon.ctorParameters;\n/** @type {?} */\nPolygon.prototype.clickable;\n/** @type {?} */\nPolygon.prototype.draggable;\n/** @type {?} */\nPolygon.prototype.editable;\n/** @type {?} */\nPolygon.prototype.fillColor;\n/** @type {?} */\nPolygon.prototype.fillOpacity;\n/** @type {?} */\nPolygon.prototype.geodesic;\n/** @type {?} */\nPolygon.prototype.paths;\n/** @type {?} */\nPolygon.prototype.strokeColor;\n/** @type {?} */\nPolygon.prototype.strokeOpacity;\n/** @type {?} */\nPolygon.prototype.strokePosition;\n/** @type {?} */\nPolygon.prototype.strokeWeight;\n/** @type {?} */\nPolygon.prototype.visible;\n/** @type {?} */\nPolygon.prototype.zIndex;\n/** @type {?} */\nPolygon.prototype.options;\n/** @type {?} */\nPolygon.prototype.click;\n/** @type {?} */\nPolygon.prototype.dblclick;\n/** @type {?} */\nPolygon.prototype.drag;\n/** @type {?} */\nPolygon.prototype.dragend;\n/** @type {?} */\nPolygon.prototype.dragstart;\n/** @type {?} */\nPolygon.prototype.mousedown;\n/** @type {?} */\nPolygon.prototype.mousemove;\n/** @type {?} */\nPolygon.prototype.mouseout;\n/** @type {?} */\nPolygon.prototype.mouseover;\n/** @type {?} */\nPolygon.prototype.mouseup;\n/** @type {?} */\nPolygon.prototype.rightclick;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Input,\n  Output,\n  Directive,\n  EventEmitter,\n  ElementRef,\n} from '@angular/core';\n\nimport { NgMapApiLoader } from '../services/api-loader';\nimport { OptionBuilder } from '../services/option-builder';\nexport class PlacesAutoComplete {\n   bounds: any;\n   componentRestrictions: any;\n   types: string[];\n\n   place_changed: EventEmitter<any> = new EventEmitter();\n   initialized$: EventEmitter<any> = new EventEmitter();\npublic objectOptions: any;\npublic autocomplete: google.maps.places.Autocomplete;\n/**\n * @param {?} optionBuilder\n * @param {?} elementRef\n * @param {?} apiLoader\n */\nconstructor(\npublic optionBuilder: OptionBuilder,\npublic elementRef: ElementRef,\npublic apiLoader: NgMapApiLoader,\n  ) {\n    apiLoader.load();\n    apiLoader.api$.subscribe(() => this.initialize());\n  }\n\n  // only called when map is ready\n  initialize = (): void => {\n    this.objectOptions =\n      this.optionBuilder.googlizeAllInputs(['bounds', 'componentRestrictions', 'types'], this);\n\n\n    this.autocomplete = new google.maps.places.Autocomplete(\n      this.elementRef.nativeElement,\n      this.objectOptions\n    );\n\n\n    this.autocomplete.addListener('place_changed', place => {\n      this.place_changed.emit(this.autocomplete.getPlace());\n    });\n\n    this.initialized$.emit(this.autocomplete);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[places-auto-complete]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OptionBuilder, },\n{type: ElementRef, },\n{type: NgMapApiLoader, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'bounds': [{ type: Input, args: ['bounds', ] },],\n'componentRestrictions': [{ type: Input, args: ['componentRestrictions', ] },],\n'types': [{ type: Input, args: ['types', ] },],\n'place_changed': [{ type: Output, args: ['place_changed', ] },],\n'initialized$': [{ type: Output },],\n};\n}\n\nfunction PlacesAutoComplete_tsickle_Closure_declarations() {\n/** @type {?} */\nPlacesAutoComplete.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlacesAutoComplete.ctorParameters;\n/** @type {?} */\nPlacesAutoComplete.propDecorators;\n/** @type {?} */\nPlacesAutoComplete.prototype.bounds;\n/** @type {?} */\nPlacesAutoComplete.prototype.componentRestrictions;\n/** @type {?} */\nPlacesAutoComplete.prototype.types;\n/** @type {?} */\nPlacesAutoComplete.prototype.place_changed;\n/** @type {?} */\nPlacesAutoComplete.prototype.initialized$;\n/** @type {?} */\nPlacesAutoComplete.prototype.objectOptions;\n/** @type {?} */\nPlacesAutoComplete.prototype.autocomplete;\n/** @type {?} */\nPlacesAutoComplete.prototype.initialize;\n/** @type {?} */\nPlacesAutoComplete.prototype.optionBuilder;\n/** @type {?} */\nPlacesAutoComplete.prototype.elementRef;\n/** @type {?} */\nPlacesAutoComplete.prototype.apiLoader;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Directive, OnInit} from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [\n  'anchorPoint', 'animation', 'clickable', 'cursor', 'draggable', 'icon', 'label', 'opacity',\n  'optimized', 'place', 'position', 'shape', 'title', 'visible', 'zIndex', 'options',\n  // ngui-map specific inputs\n  'geoFallbackPosition'\n];\nconst /** @type {?} */ OUTPUTS = [\n  'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\n  'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\n  'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged'\n];\nexport class Marker extends BaseMapDirective implements OnInit {\npublic anchorPoint: any;\npublic animation: any;\npublic clickable: any;\npublic cursor: any;\npublic draggable: any;\npublic icon: any;\npublic label: any;\npublic opacity: any;\npublic optimized: any;\npublic place: any;\npublic position: any;\npublic shape: any;\npublic title: any;\npublic visible: any;\npublic zIndex: any;\npublic options: any;\npublic geoFallbackPosition: any;\npublic animationChanged: any;\npublic click: any;\npublic clickableChanged: any;\npublic cursorChanged: any;\npublic dblclick: any;\npublic drag: any;\npublic dragend: any;\npublic draggableChanged: any;\npublic dragstart: any;\npublic flatChanged: any;\npublic iconChanged: any;\npublic mousedown: any;\npublic mouseout: any;\npublic mouseover: any;\npublic mouseup: any;\npublic positionChanged: any;\npublic rightclick: any;\npublic shapeChanged: any;\npublic titleChanged: any;\npublic visibleChanged: any;\npublic zindexChanged: any;\npublic mapObject: google.maps.Marker;\npublic objectOptions: google.maps.MarkerOptions = /** @type {?} */(( <google.maps.MarkerOptions>{}));\n/**\n * @param {?} nguiMapComp\n */\nconstructor(private nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Marker', INPUTS, OUTPUTS);\n\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\n      this.initialize();\n    } else {\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n    }\n  }\n/**\n * @return {?}\n */\ninitialize(): void {\n    super.initialize();\n    this.setPosition();\n  }\n/**\n * @return {?}\n */\nsetPosition(): void {\n    if (!this['position']) {\n      this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(\n        position => {\n\n          let /** @type {?} */ latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n          this.mapObject.setPosition(latLng);\n        },\n        error => {\n          console.error('ngui-map, error finding the current location');\n          this.mapObject.setPosition(this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    } else if (typeof this['position'] === 'string') {\n      this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({address: this['position']}).subscribe(\n        results => {\n\n          this.mapObject.setPosition(results[0].geometry.location);\n        },\n        error => {\n          console.error('ngui-map, error finding the location from', this['position']);\n          this.mapObject.setPosition(this.objectOptions['geoFallbackPosition'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map > marker',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction Marker_tsickle_Closure_declarations() {\n/** @type {?} */\nMarker.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMarker.ctorParameters;\n/** @type {?} */\nMarker.prototype.anchorPoint;\n/** @type {?} */\nMarker.prototype.animation;\n/** @type {?} */\nMarker.prototype.clickable;\n/** @type {?} */\nMarker.prototype.cursor;\n/** @type {?} */\nMarker.prototype.draggable;\n/** @type {?} */\nMarker.prototype.icon;\n/** @type {?} */\nMarker.prototype.label;\n/** @type {?} */\nMarker.prototype.opacity;\n/** @type {?} */\nMarker.prototype.optimized;\n/** @type {?} */\nMarker.prototype.place;\n/** @type {?} */\nMarker.prototype.position;\n/** @type {?} */\nMarker.prototype.shape;\n/** @type {?} */\nMarker.prototype.title;\n/** @type {?} */\nMarker.prototype.visible;\n/** @type {?} */\nMarker.prototype.zIndex;\n/** @type {?} */\nMarker.prototype.options;\n/** @type {?} */\nMarker.prototype.geoFallbackPosition;\n/** @type {?} */\nMarker.prototype.animationChanged;\n/** @type {?} */\nMarker.prototype.click;\n/** @type {?} */\nMarker.prototype.clickableChanged;\n/** @type {?} */\nMarker.prototype.cursorChanged;\n/** @type {?} */\nMarker.prototype.dblclick;\n/** @type {?} */\nMarker.prototype.drag;\n/** @type {?} */\nMarker.prototype.dragend;\n/** @type {?} */\nMarker.prototype.draggableChanged;\n/** @type {?} */\nMarker.prototype.dragstart;\n/** @type {?} */\nMarker.prototype.flatChanged;\n/** @type {?} */\nMarker.prototype.iconChanged;\n/** @type {?} */\nMarker.prototype.mousedown;\n/** @type {?} */\nMarker.prototype.mouseout;\n/** @type {?} */\nMarker.prototype.mouseover;\n/** @type {?} */\nMarker.prototype.mouseup;\n/** @type {?} */\nMarker.prototype.positionChanged;\n/** @type {?} */\nMarker.prototype.rightclick;\n/** @type {?} */\nMarker.prototype.shapeChanged;\n/** @type {?} */\nMarker.prototype.titleChanged;\n/** @type {?} */\nMarker.prototype.visibleChanged;\n/** @type {?} */\nMarker.prototype.zindexChanged;\n/** @type {?} */\nMarker.prototype.mapObject;\n/** @type {?} */\nMarker.prototype.objectOptions;\n/** @type {?} */\nMarker.prototype.nguiMapComp;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [ 'clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex', 'options' ];\nconst /** @type {?} */ OUTPUTS = [ 'click', 'defaultviewport_changed', 'status_changed' ];\nexport class KmlLayer extends BaseMapDirective {\npublic clickable: any;\npublic preserveViewport: any;\npublic screenOverlays: any;\npublic suppressInfoWindows: any;\npublic url: any;\npublic zIndex: any;\npublic options: any;\npublic click: any;\npublic defaultviewport_changed: any;\npublic status_changed: any;\n/**\n * @param {?} nguiMapComp\n */\nconstructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'KmlLayer', INPUTS, OUTPUTS);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map > kml-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction KmlLayer_tsickle_Closure_declarations() {\n/** @type {?} */\nKmlLayer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nKmlLayer.ctorParameters;\n/** @type {?} */\nKmlLayer.prototype.clickable;\n/** @type {?} */\nKmlLayer.prototype.preserveViewport;\n/** @type {?} */\nKmlLayer.prototype.screenOverlays;\n/** @type {?} */\nKmlLayer.prototype.suppressInfoWindows;\n/** @type {?} */\nKmlLayer.prototype.url;\n/** @type {?} */\nKmlLayer.prototype.zIndex;\n/** @type {?} */\nKmlLayer.prototype.options;\n/** @type {?} */\nKmlLayer.prototype.click;\n/** @type {?} */\nKmlLayer.prototype.defaultviewport_changed;\n/** @type {?} */\nKmlLayer.prototype.status_changed;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [ 'data', 'dissipating', 'gradient', 'maxIntensity', 'opacity', 'radius', 'options' ];\nconst /** @type {?} */ OUTPUTS = [];\nexport class HeatmapLayer extends BaseMapDirective {\npublic data: any;\npublic dissipating: any;\npublic gradient: any;\npublic maxIntensity: any;\npublic opacity: any;\npublic radius: any;\npublic options: any;\npublic libraryName = 'visualization';\n/**\n * @param {?} nguiMapComp\n */\nconstructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'HeatmapLayer', INPUTS, OUTPUTS);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map > heatmap-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction HeatmapLayer_tsickle_Closure_declarations() {\n/** @type {?} */\nHeatmapLayer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHeatmapLayer.ctorParameters;\n/** @type {?} */\nHeatmapLayer.prototype.data;\n/** @type {?} */\nHeatmapLayer.prototype.dissipating;\n/** @type {?} */\nHeatmapLayer.prototype.gradient;\n/** @type {?} */\nHeatmapLayer.prototype.maxIntensity;\n/** @type {?} */\nHeatmapLayer.prototype.opacity;\n/** @type {?} */\nHeatmapLayer.prototype.radius;\n/** @type {?} */\nHeatmapLayer.prototype.options;\n/** @type {?} */\nHeatmapLayer.prototype.libraryName;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [ 'url', 'bounds', 'clickable', 'opacity' ];\nconst /** @type {?} */ OUTPUTS = [ 'click', 'dblclick' ];\nexport class GroundOverlay extends BaseMapDirective {\npublic url: any;\npublic bounds: any;\npublic clickable: any;\npublic opacity: any;\npublic click: any;\npublic dblclick: any;\npublic mapObject: google.maps.GroundOverlay;\npublic objectOptions: google.maps.GroundOverlayOptions = /** @type {?} */(( <google.maps.GroundOverlayOptions>{}));\n/**\n * @param {?} nguiMapComp\n */\nconstructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'GroundOverlay', INPUTS, OUTPUTS);\n  }\n/**\n * @return {?}\n */\ninitialize(): void {\n    // url, bounds are not the options of GroundOverlay\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(['clickable', 'opacity'], this);\n\n\n    // noinspection TypeScriptUnresolvedFunction\n    this.mapObject = new google.maps.GroundOverlay(this['url'], this['bounds'], this.objectOptions);\n    this.mapObject.setMap(this.nguiMapComponent.map);\n    this.mapObject['mapObjectName'] = this.mapObjectName;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map > ground-overlay',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction GroundOverlay_tsickle_Closure_declarations() {\n/** @type {?} */\nGroundOverlay.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGroundOverlay.ctorParameters;\n/** @type {?} */\nGroundOverlay.prototype.url;\n/** @type {?} */\nGroundOverlay.prototype.bounds;\n/** @type {?} */\nGroundOverlay.prototype.clickable;\n/** @type {?} */\nGroundOverlay.prototype.opacity;\n/** @type {?} */\nGroundOverlay.prototype.click;\n/** @type {?} */\nGroundOverlay.prototype.dblclick;\n/** @type {?} */\nGroundOverlay.prototype.mapObject;\n/** @type {?} */\nGroundOverlay.prototype.objectOptions;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [\n  'options',\n  'circleOptions', 'drawingControl', 'drawingControlOptions', 'drawingMode',\n  'map', 'markerOptions', 'polygonOptions', 'polylineOptions', 'rectangleOptions'\n];\nconst /** @type {?} */ OUTPUTS = [\n  'circlecomplete', 'markercomplete', 'overlaycomplete',\n  'polygoncomplete', 'polylinecomplete', 'rectanglecomplete'\n];\nexport class DrawingManager extends BaseMapDirective {\npublic options: any;\npublic circleOptions: any;\npublic drawingControl: any;\npublic drawingControlOptions: any;\npublic drawingMode: any;\npublic map: any;\npublic markerOptions: any;\npublic polygonOptions: any;\npublic polylineOptions: any;\npublic rectangleOptions: any;\npublic circlecomplete: any;\npublic markercomplete: any;\npublic overlaycomplete: any;\npublic polygoncomplete: any;\npublic polylinecomplete: any;\npublic rectanglecomplete: any;\n/**\n * @param {?} nguiMapComp\n */\nconstructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'DrawingManager', INPUTS, OUTPUTS);\n    this.libraryName = 'drawing';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map > drawing-manager',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction DrawingManager_tsickle_Closure_declarations() {\n/** @type {?} */\nDrawingManager.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDrawingManager.ctorParameters;\n/** @type {?} */\nDrawingManager.prototype.options;\n/** @type {?} */\nDrawingManager.prototype.circleOptions;\n/** @type {?} */\nDrawingManager.prototype.drawingControl;\n/** @type {?} */\nDrawingManager.prototype.drawingControlOptions;\n/** @type {?} */\nDrawingManager.prototype.drawingMode;\n/** @type {?} */\nDrawingManager.prototype.map;\n/** @type {?} */\nDrawingManager.prototype.markerOptions;\n/** @type {?} */\nDrawingManager.prototype.polygonOptions;\n/** @type {?} */\nDrawingManager.prototype.polylineOptions;\n/** @type {?} */\nDrawingManager.prototype.rectangleOptions;\n/** @type {?} */\nDrawingManager.prototype.circlecomplete;\n/** @type {?} */\nDrawingManager.prototype.markercomplete;\n/** @type {?} */\nDrawingManager.prototype.overlaycomplete;\n/** @type {?} */\nDrawingManager.prototype.polygoncomplete;\n/** @type {?} */\nDrawingManager.prototype.polylinecomplete;\n/** @type {?} */\nDrawingManager.prototype.rectanglecomplete;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Input, Directive, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\nimport { NavigatorGeolocation } from '../services/navigator-geolocation';\n\nconst /** @type {?} */ INPUTS = [\n  'directions', 'draggable', 'hideRouteList', 'infoWindow', 'panel', 'markerOptions',\n  'polylineOptions', 'preserveViewport', 'routeIndex', 'suppressBicyclingLayer',\n  'suppressInfoWindows', 'suppressMarkers', 'suppressPolylines'\n];\nconst /** @type {?} */ OUTPUTS = ['directions_changed'];\nexport class DirectionsRenderer extends BaseMapDirective implements OnChanges, OnDestroy {\npublic directions: any;\npublic draggable: any;\npublic hideRouteList: any;\npublic infoWindow: any;\npublic panel: any;\npublic markerOptions: any;\npublic polylineOptions: any;\npublic preserveViewport: any;\npublic routeIndex: any;\npublic suppressBicyclingLayer: any;\npublic suppressInfoWindows: any;\npublic suppressMarkers: any;\npublic suppressPolylines: any;\npublic directions_changed: any; // generated by ngc-pre-compiler.js\n\n  // tslint:disable-next-line\n   directionsRequest: google.maps.DirectionsRequest;\n\n  directionsService: google.maps.DirectionsService;\n  directionsRenderer: google.maps.DirectionsRenderer;\n/**\n * @param {?} nguiMapComponent\n * @param {?} geolocation\n */\nconstructor(\n    nguiMapComponent: NguiMapComponent,\npublic geolocation: NavigatorGeolocation\n  ) {\n    super(nguiMapComponent, 'DirectionsRenderer', INPUTS, OUTPUTS);\n  }\n/**\n * @return {?}\n */\ninitialize(): void {\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n    if (typeof this.objectOptions['panel'] === 'string') { // find a Node for panel\n      this.objectOptions['panel'] = document.querySelector(this.objectOptions['panel']);\n    }\n\n\n\n    this.directionsService = new google.maps.DirectionsService();\n    this.directionsRenderer = new google.maps.DirectionsRenderer(this.objectOptions);\n\n    this.directionsRenderer.setMap(this.nguiMapComponent.map);\n\n    // set google events listeners and emidirectionsRenderer to this outputs listeners\n    this.showDirections(this.directionsRequest);\n\n    this.nguiMap.setObjectEvents(this.outputs, this, 'directionsRenderer');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.directionsRenderer);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    let /** @type {?} */ newOptions = {};\n    for (let /** @type {?} */ key in changes) {\n      if (this.inputs.indexOf(key) !== -1) {\n        newOptions[key] = this.optionBuilder.googlize(changes[key].currentValue);\n      }\n    }\n    if (changes['directionsRequest'] && this.directionsRenderer) {\n      this.directionsService && this.showDirections(this.directionsRequest);\n    }\n  }\n/**\n * @param {?} directionsRequest\n * @return {?}\n */\nshowDirections(directionsRequest: google.maps.DirectionsRequest) {\n    this.directionsService.route(directionsRequest,\n      (response: any, status: any) =>  {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.directionsRenderer.setDirections(response);\n        } else {\n          console.error('Directions request failed due to ' + status);\n        }\n      }\n    );\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    super.ngOnDestroy();\n    this.nguiMap.clearObjectEvents(this.outputs, this, 'directionsRenderer');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map > directions-renderer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n{type: NavigatorGeolocation, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'directionsRequest': [{ type: Input, args: ['directions-request', ] },],\n};\n}\n\nfunction DirectionsRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectionsRenderer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDirectionsRenderer.ctorParameters;\n/** @type {?} */\nDirectionsRenderer.propDecorators;\n/** @type {?} */\nDirectionsRenderer.prototype.directions;\n/** @type {?} */\nDirectionsRenderer.prototype.draggable;\n/** @type {?} */\nDirectionsRenderer.prototype.hideRouteList;\n/** @type {?} */\nDirectionsRenderer.prototype.infoWindow;\n/** @type {?} */\nDirectionsRenderer.prototype.panel;\n/** @type {?} */\nDirectionsRenderer.prototype.markerOptions;\n/** @type {?} */\nDirectionsRenderer.prototype.polylineOptions;\n/** @type {?} */\nDirectionsRenderer.prototype.preserveViewport;\n/** @type {?} */\nDirectionsRenderer.prototype.routeIndex;\n/** @type {?} */\nDirectionsRenderer.prototype.suppressBicyclingLayer;\n/** @type {?} */\nDirectionsRenderer.prototype.suppressInfoWindows;\n/** @type {?} */\nDirectionsRenderer.prototype.suppressMarkers;\n/** @type {?} */\nDirectionsRenderer.prototype.suppressPolylines;\n/** @type {?} */\nDirectionsRenderer.prototype.directions_changed;\n/** @type {?} */\nDirectionsRenderer.prototype.directionsRequest;\n/** @type {?} */\nDirectionsRenderer.prototype.directionsService;\n/** @type {?} */\nDirectionsRenderer.prototype.directionsRenderer;\n/** @type {?} */\nDirectionsRenderer.prototype.geolocation;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = ['controlPosition', 'controls', 'drawingMode', 'featureFactory', 'style', 'geoJson', 'geoJsonUrl'];\nconst /** @type {?} */ OUTPUTS = [\n  'addfeature', 'click', 'dblclick', 'mousedown', 'mouseout', 'mouseover',\n  'mouseup', 'removefeature', 'removeproperty', 'rightclick', 'setgeometry', 'setproperty'\n];\nexport class DataLayer extends BaseMapDirective {\npublic controlPosition: any;\npublic controls: any;\npublic drawingMode: any;\npublic featureFactory: any;\npublic style: any;\npublic geoJson: any;\npublic geoJsonUrl: any;\npublic addfeature: any;\npublic click: any;\npublic dblclick: any;\npublic mousedown: any;\npublic mouseout: any;\npublic mouseover: any;\npublic mouseup: any;\npublic removefeature: any;\npublic removeproperty: any;\npublic rightclick: any;\npublic setgeometry: any;\npublic setproperty: any;\n/**\n * @param {?} nguiMapComponent\n */\nconstructor(nguiMapComponent: NguiMapComponent) {\n    super(nguiMapComponent, 'Data', INPUTS, OUTPUTS);\n  }\n/**\n * @return {?}\n */\ninitialize(): void {\n    if (this['geoJson']) {\n      // addGeoJson from an object\n\n      this.nguiMapComponent.map.data.addGeoJson(this['geoJson']);\n    } else if (this['geoJsonUrl']) {\n      // loadGeoJson from a URL\n\n      this.nguiMapComponent.map.data.loadGeoJson(this['geoJsonUrl']);\n    }\n    else {\n      this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\n      this.nguiMapComponent.map.data.add(this.objectOptions);\n    }\n\n    // unlike others, data belongs to map. e.g., map.data.loadGeoJson(), map.data.add()\n    this.mapObject = this.nguiMapComponent.map.data;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map > data-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction DataLayer_tsickle_Closure_declarations() {\n/** @type {?} */\nDataLayer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDataLayer.ctorParameters;\n/** @type {?} */\nDataLayer.prototype.controlPosition;\n/** @type {?} */\nDataLayer.prototype.controls;\n/** @type {?} */\nDataLayer.prototype.drawingMode;\n/** @type {?} */\nDataLayer.prototype.featureFactory;\n/** @type {?} */\nDataLayer.prototype.style;\n/** @type {?} */\nDataLayer.prototype.geoJson;\n/** @type {?} */\nDataLayer.prototype.geoJsonUrl;\n/** @type {?} */\nDataLayer.prototype.addfeature;\n/** @type {?} */\nDataLayer.prototype.click;\n/** @type {?} */\nDataLayer.prototype.dblclick;\n/** @type {?} */\nDataLayer.prototype.mousedown;\n/** @type {?} */\nDataLayer.prototype.mouseout;\n/** @type {?} */\nDataLayer.prototype.mouseover;\n/** @type {?} */\nDataLayer.prototype.mouseup;\n/** @type {?} */\nDataLayer.prototype.removefeature;\n/** @type {?} */\nDataLayer.prototype.removeproperty;\n/** @type {?} */\nDataLayer.prototype.rightclick;\n/** @type {?} */\nDataLayer.prototype.setgeometry;\n/** @type {?} */\nDataLayer.prototype.setproperty;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [\n  'center', 'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'map', 'radius',\n  'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n  // ngui-map specific inputs\n  'geoFallbackCenter'\n];\nconst /** @type {?} */ OUTPUTS = [\n  'centerChanged', 'click', 'dblclick', 'drag', 'dragend', 'dragstart',\n  'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'radiusChanged', 'rightclick',\n];\nexport class Circle extends BaseMapDirective {\npublic center: any;\npublic clickable: any;\npublic draggable: any;\npublic editable: any;\npublic fillColor: any;\npublic fillOpacity: any;\npublic map: any;\npublic radius: any;\npublic strokeColor: any;\npublic strokeOpacity: any;\npublic strokePosition: any;\npublic strokeWeight: any;\npublic visible: any;\npublic zIndex: any;\npublic options: any;\npublic geoFallbackCenter: any;\npublic centerChanged: any;\npublic click: any;\npublic dblclick: any;\npublic drag: any;\npublic dragend: any;\npublic dragstart: any;\npublic mousedown: any;\npublic mousemove: any;\npublic mouseout: any;\npublic mouseover: any;\npublic mouseup: any;\npublic radiusChanged: any;\npublic rightclick: any;\npublic mapObject: google.maps.Circle;\npublic objectOptions: google.maps.CircleOptions = /** @type {?} */(( <google.maps.CircleOptions>{}));\n/**\n * @param {?} nguiMapComp\n */\nconstructor(private nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Circle', INPUTS, OUTPUTS);\n  }\n/**\n * @return {?}\n */\ninitialize(): void {\n    super.initialize();\n    this.setCenter();\n  }\n/**\n * @return {?}\n */\nsetCenter(): void {\n    if (!this['center']) {\n      this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(\n        center => {\n\n          let /** @type {?} */ latLng = new google.maps.LatLng(center.coords.latitude, center.coords.longitude);\n          this.mapObject.setCenter(latLng);\n        },\n        error => {\n          console.error('ngui-map, error in finding the current position');\n          this.mapObject.setCenter(this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    } else if (typeof this['center'] === 'string') {\n      this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({address: this['center']}).subscribe(\n        results => {\n\n          this.mapObject.setCenter(results[0].geometry.location);\n        },\n        error => {\n          console.error('ngui-map, error in finding location from', this['center']);\n          this.mapObject.setCenter(this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map>circle, ngui-map>map-circle',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction Circle_tsickle_Closure_declarations() {\n/** @type {?} */\nCircle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCircle.ctorParameters;\n/** @type {?} */\nCircle.prototype.center;\n/** @type {?} */\nCircle.prototype.clickable;\n/** @type {?} */\nCircle.prototype.draggable;\n/** @type {?} */\nCircle.prototype.editable;\n/** @type {?} */\nCircle.prototype.fillColor;\n/** @type {?} */\nCircle.prototype.fillOpacity;\n/** @type {?} */\nCircle.prototype.map;\n/** @type {?} */\nCircle.prototype.radius;\n/** @type {?} */\nCircle.prototype.strokeColor;\n/** @type {?} */\nCircle.prototype.strokeOpacity;\n/** @type {?} */\nCircle.prototype.strokePosition;\n/** @type {?} */\nCircle.prototype.strokeWeight;\n/** @type {?} */\nCircle.prototype.visible;\n/** @type {?} */\nCircle.prototype.zIndex;\n/** @type {?} */\nCircle.prototype.options;\n/** @type {?} */\nCircle.prototype.geoFallbackCenter;\n/** @type {?} */\nCircle.prototype.centerChanged;\n/** @type {?} */\nCircle.prototype.click;\n/** @type {?} */\nCircle.prototype.dblclick;\n/** @type {?} */\nCircle.prototype.drag;\n/** @type {?} */\nCircle.prototype.dragend;\n/** @type {?} */\nCircle.prototype.dragstart;\n/** @type {?} */\nCircle.prototype.mousedown;\n/** @type {?} */\nCircle.prototype.mousemove;\n/** @type {?} */\nCircle.prototype.mouseout;\n/** @type {?} */\nCircle.prototype.mouseover;\n/** @type {?} */\nCircle.prototype.mouseup;\n/** @type {?} */\nCircle.prototype.radiusChanged;\n/** @type {?} */\nCircle.prototype.rightclick;\n/** @type {?} */\nCircle.prototype.mapObject;\n/** @type {?} */\nCircle.prototype.objectOptions;\n/** @type {?} */\nCircle.prototype.nguiMapComp;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  ElementRef,\n  Output,\n  EventEmitter,\n  SimpleChanges, OnInit, OnDestroy, OnChanges,\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { debounceTime } from 'rxjs/operator/debounceTime';\n\nimport { NguiMap } from '../services/ngui-map';\nimport { NguiMapComponent } from './ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [\n  'position'\n];\n// to avoid DOM event conflicts map_*\nconst /** @type {?} */ OUTPUTS = [\n  'animationChanged', 'click', 'clickableChanged', 'cursorChanged', 'dblclick', 'drag', 'dragend', 'draggableChanged',\n  'dragstart', 'flatChanged', 'iconChanged', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'positionChanged', 'rightclick',\n  'shapeChanged', 'titleChanged', 'visibleChanged', 'zindexChanged',\n  'map_click', 'map_mouseover', 'map_mouseout', 'map_mouseup', 'map_mousedown', 'map_drag', 'map_dragend'\n];\n/**\n * Wrapper to a create extend OverlayView at runtime, only after google maps is loaded.\n * Otherwise throws a google is unknown error.\n * @param {?} htmlEl\n * @param {?} position\n * @return {?}\n */\nfunction getCustomMarkerOverlayView(htmlEl: HTMLElement, position: any) {\nclass CustomMarkerOverlayView extends google.maps.OverlayView {\nprivate htmlEl: HTMLElement;\nprivate position: any;\nprivate zIndex: string;\nprivate visible: boolean = true;\n/**\n * @param {?} htmlEl\n * @param {?} position\n */\nconstructor(htmlEl: HTMLElement, position: any) {\n      super();\n      this.htmlEl = htmlEl;\n      this.position = position;\n    }\n/**\n * @return {?}\n */\nonAdd(): void {\n      this.getPanes().overlayMouseTarget.appendChild(this.htmlEl);\n\n      // required for correct display inside google maps container\n      this.htmlEl.style.position = 'absolute';\n    }\n/**\n * @return {?}\n */\ndraw(): void {\n      this.setPosition(this.position);\n      this.setZIndex(this.zIndex);\n      this.setVisible(this.visible);\n    }\n/**\n * @return {?}\n */\nonRemove(): void {\n      //\n    }\n/**\n * @return {?}\n */\ngetPosition() {\n      return this.position;\n    }\n\n    setPosition = (position?: any) => {\n      this.htmlEl.style.visibility = 'hidden';\n\n      if (position.constructor.name === 'Array') {\n        this.position = new google.maps.LatLng(position[0], position[1]);\n      } else if (typeof position === 'string') {\n        let /** @type {?} */ geocoder = new google.maps.Geocoder();\n\n        geocoder.geocode({address: position}, (results, status) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n\n            this.setPosition(results[0].geometry.location);\n          } else {\n\n          }\n        });\n      } else if (position && typeof position.lng === 'function') {\n        this.position = position;\n      }\n\n      if (this.getProjection() && typeof this.position.lng === 'function') {\n        let /** @type {?} */ positionOnMap = () => {\n          let /** @type {?} */ posPixel = this.getProjection().fromLatLngToDivPixel(this.position);\n          let /** @type {?} */ x = Math.round(posPixel.x - (this.htmlEl.offsetWidth / 2));\n          let /** @type {?} */ y = Math.round(posPixel.y - this.htmlEl.offsetHeight / 2);\n          this.htmlEl.style.left = x + 'px';\n          this.htmlEl.style.top = y + 'px';\n          this.htmlEl.style.visibility = 'visible';\n        };\n\n        if (this.htmlEl.offsetWidth && this.htmlEl.offsetHeight) {\n          positionOnMap();\n        } else {\n          setTimeout(() => positionOnMap());\n        }\n      }\n    }\n/**\n * @param {?} zIndex\n * @return {?}\n */\nsetZIndex(zIndex: string): void {\n      zIndex && (this.zIndex = zIndex); /* jshint ignore:line */\n      this.htmlEl.style.zIndex = this.zIndex;\n    }\n/**\n * @param {?} visible\n * @return {?}\n */\nsetVisible(visible: boolean) {\n      this.htmlEl.style.display = visible ? 'inline-block' : 'none';\n      this.visible = visible;\n    }\n  }\n\nfunction CustomMarkerOverlayView_tsickle_Closure_declarations() {\n/** @type {?} */\nCustomMarkerOverlayView.prototype.htmlEl;\n/** @type {?} */\nCustomMarkerOverlayView.prototype.position;\n/** @type {?} */\nCustomMarkerOverlayView.prototype.zIndex;\n/** @type {?} */\nCustomMarkerOverlayView.prototype.visible;\n/** @type {?} */\nCustomMarkerOverlayView.prototype.setPosition;\n}\n\n\n  return new CustomMarkerOverlayView(htmlEl, position);\n}\nexport class CustomMarker implements OnInit, OnDestroy, OnChanges {\npublic position: any;\npublic animationChanged: any;\npublic click: any;\npublic clickableChanged: any;\npublic cursorChanged: any;\npublic dblclick: any;\npublic drag: any;\npublic dragend: any;\npublic draggableChanged: any;\npublic dragstart: any;\npublic flatChanged: any;\npublic iconChanged: any;\npublic mousedown: any;\npublic mouseout: any;\npublic mouseover: any;\npublic mouseup: any;\npublic positionChanged: any;\npublic rightclick: any;\npublic shapeChanged: any;\npublic titleChanged: any;\npublic visibleChanged: any;\npublic zindexChanged: any;\npublic map_click: any;\npublic map_mouseover: any;\npublic map_mouseout: any;\npublic map_mouseup: any;\npublic map_mousedown: any;\npublic map_drag: any;\npublic map_dragend: any; // generated by ngc-pre-compiler.js\n\n   initialized$: EventEmitter<any> = new EventEmitter();\npublic inputChanges$ = new Subject();\nprivate el: HTMLElement;\nprivate mapObject: any;\n/**\n * @param {?} nguiMapComponent\n * @param {?} elementRef\n * @param {?} nguiMap\n */\nconstructor(private nguiMapComponent: NguiMapComponent,\nprivate elementRef: ElementRef,\nprivate nguiMap: NguiMap) {\n    this.elementRef.nativeElement.style.display = 'none';\n    OUTPUTS.forEach(output => this[output] = new EventEmitter());\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\n      this.initialize();\n    } else {\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    this.inputChanges$.next(changes);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.inputChanges$.complete();\n    this.nguiMapComponent.removeFromMapObjectGroup('CustomMarker', this.mapObject);\n\n    if (this.mapObject) {\n      this.nguiMap.clearObjectEvents(OUTPUTS, this, 'mapObject');\n    }\n  }\n/**\n * @return {?}\n */\nprivate initialize(): void {\n\n    this.el = this.elementRef.nativeElement;\n\n    this.mapObject = getCustomMarkerOverlayView(this.el, this['position']);\n    this.mapObject.setMap(this.nguiMapComponent.map);\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(OUTPUTS, this, 'mapObject');\n\n    // update object when input changes\n    debounceTime.call(this.inputChanges$, 1000)\n      .subscribe((changes: SimpleChanges) => this.nguiMap.updateGoogleObject(this.mapObject, changes));\n\n    this.nguiMapComponent.addToMapObjectGroup('CustomMarker', this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngui-map > custom-marker',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n  template: `\n    <ng-content></ng-content>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n{type: ElementRef, },\n{type: NguiMap, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'initialized$': [{ type: Output },],\n};\n}\n\nfunction CustomMarker_tsickle_Closure_declarations() {\n/** @type {?} */\nCustomMarker.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCustomMarker.ctorParameters;\n/** @type {?} */\nCustomMarker.propDecorators;\n/** @type {?} */\nCustomMarker.prototype.position;\n/** @type {?} */\nCustomMarker.prototype.animationChanged;\n/** @type {?} */\nCustomMarker.prototype.click;\n/** @type {?} */\nCustomMarker.prototype.clickableChanged;\n/** @type {?} */\nCustomMarker.prototype.cursorChanged;\n/** @type {?} */\nCustomMarker.prototype.dblclick;\n/** @type {?} */\nCustomMarker.prototype.drag;\n/** @type {?} */\nCustomMarker.prototype.dragend;\n/** @type {?} */\nCustomMarker.prototype.draggableChanged;\n/** @type {?} */\nCustomMarker.prototype.dragstart;\n/** @type {?} */\nCustomMarker.prototype.flatChanged;\n/** @type {?} */\nCustomMarker.prototype.iconChanged;\n/** @type {?} */\nCustomMarker.prototype.mousedown;\n/** @type {?} */\nCustomMarker.prototype.mouseout;\n/** @type {?} */\nCustomMarker.prototype.mouseover;\n/** @type {?} */\nCustomMarker.prototype.mouseup;\n/** @type {?} */\nCustomMarker.prototype.positionChanged;\n/** @type {?} */\nCustomMarker.prototype.rightclick;\n/** @type {?} */\nCustomMarker.prototype.shapeChanged;\n/** @type {?} */\nCustomMarker.prototype.titleChanged;\n/** @type {?} */\nCustomMarker.prototype.visibleChanged;\n/** @type {?} */\nCustomMarker.prototype.zindexChanged;\n/** @type {?} */\nCustomMarker.prototype.map_click;\n/** @type {?} */\nCustomMarker.prototype.map_mouseover;\n/** @type {?} */\nCustomMarker.prototype.map_mouseout;\n/** @type {?} */\nCustomMarker.prototype.map_mouseup;\n/** @type {?} */\nCustomMarker.prototype.map_mousedown;\n/** @type {?} */\nCustomMarker.prototype.map_drag;\n/** @type {?} */\nCustomMarker.prototype.map_dragend;\n/** @type {?} */\nCustomMarker.prototype.initialized$;\n/** @type {?} */\nCustomMarker.prototype.inputChanges$;\n/** @type {?} */\nCustomMarker.prototype.el;\n/** @type {?} */\nCustomMarker.prototype.mapObject;\n/** @type {?} */\nCustomMarker.prototype.nguiMapComponent;\n/** @type {?} */\nCustomMarker.prototype.elementRef;\n/** @type {?} */\nCustomMarker.prototype.nguiMap;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  SimpleChanges,\n  ViewChild, ViewContainerRef,\n  Output, OnInit, OnChanges, OnDestroy\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { debounceTime } from 'rxjs/operator/debounceTime';\nimport { NguiMap } from '../services/ngui-map';\nimport { NguiMapComponent } from './ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [\n  'content', 'disableAutoPan', 'maxWidth', 'pixelOffset', 'position', 'zIndex', 'options'\n];\nconst /** @type {?} */ OUTPUTS = [\n  'closeclick', 'content_changed', 'domready', 'position_changed', 'zindex_changed'\n];\nexport class InfoWindow implements OnInit, OnChanges, OnDestroy {\npublic content: any;\npublic disableAutoPan: any;\npublic maxWidth: any;\npublic pixelOffset: any;\npublic position: any;\npublic zIndex: any;\npublic options: any;\npublic closeclick: any;\npublic content_changed: any;\npublic domready: any;\npublic position_changed: any;\npublic zindex_changed: any; // generated by ngc-pre-compiler.js\n\n   initialized$: EventEmitter<any> = new EventEmitter();\npublic infoWindow: google.maps.InfoWindow;\npublic objectOptions: google.maps.InfoWindowOptions = {};\npublic inputChanges$ = new Subject();\n   template: ViewContainerRef;\n/**\n * @param {?} elementRef\n * @param {?} nguiMap\n * @param {?} nguiMapComponent\n */\nconstructor(\nprivate elementRef: ElementRef,\nprivate nguiMap: NguiMap,\nprivate nguiMapComponent: NguiMapComponent,\n  ) {\n    this.elementRef.nativeElement.style.display = 'none';\n    OUTPUTS.forEach(output => this[output] = new EventEmitter());\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\n      this.initialize();\n    } else {\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    this.inputChanges$.next(changes);\n  }\n/**\n * @return {?}\n */\ninitialize(): void {\n\n\n    this.objectOptions = this.nguiMapComponent.optionBuilder.googlizeAllInputs(INPUTS, this);\n    this.infoWindow = new google.maps.InfoWindow(this.objectOptions);\n    this.infoWindow['mapObjectName'] = 'InfoWindow';\n\n\n    // register infoWindow ids to NguiMap, so that it can be opened by id\n    if (this.elementRef.nativeElement.id) {\n      this.nguiMapComponent.infoWindows[this.elementRef.nativeElement.id] = this;\n    } else {\n      console.error('An InfoWindow must have an id. e.g. id=\"detail\"');\n    }\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(OUTPUTS, this, 'infoWindow');\n\n    // update object when input changes\n    debounceTime.call(this.inputChanges$, 1000)\n      .subscribe((changes: SimpleChanges) => this.nguiMap.updateGoogleObject(this.infoWindow, changes));\n\n    this.nguiMapComponent.addToMapObjectGroup('InfoWindow', this.infoWindow);\n    this.initialized$.emit(this.infoWindow);\n  }\n/**\n * @param {?} anchor\n * @return {?}\n */\nopen(anchor: google.maps.MVCObject) {\n    // set content and open it\n    this.infoWindow.setContent(this.template.element.nativeElement);\n    this.infoWindow.open(this.nguiMapComponent.map, anchor);\n  }\n/**\n * @return {?}\n */\nclose() {\n    // check if infoWindow exists, and closes it\n    if (this.infoWindow)\n      this.infoWindow.close();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.inputChanges$.complete();\n    if (this.infoWindow) {\n      this.nguiMap.clearObjectEvents(OUTPUTS, this, 'infoWindow');\n      delete this.infoWindow;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngui-map > info-window',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n  template: `<div #template><ng-content></ng-content></div>`,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NguiMap, },\n{type: NguiMapComponent, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'initialized$': [{ type: Output },],\n'template': [{ type: ViewChild, args: ['template', {read: ViewContainerRef}, ] },],\n};\n}\n\nfunction InfoWindow_tsickle_Closure_declarations() {\n/** @type {?} */\nInfoWindow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfoWindow.ctorParameters;\n/** @type {?} */\nInfoWindow.propDecorators;\n/** @type {?} */\nInfoWindow.prototype.content;\n/** @type {?} */\nInfoWindow.prototype.disableAutoPan;\n/** @type {?} */\nInfoWindow.prototype.maxWidth;\n/** @type {?} */\nInfoWindow.prototype.pixelOffset;\n/** @type {?} */\nInfoWindow.prototype.position;\n/** @type {?} */\nInfoWindow.prototype.zIndex;\n/** @type {?} */\nInfoWindow.prototype.options;\n/** @type {?} */\nInfoWindow.prototype.closeclick;\n/** @type {?} */\nInfoWindow.prototype.content_changed;\n/** @type {?} */\nInfoWindow.prototype.domready;\n/** @type {?} */\nInfoWindow.prototype.position_changed;\n/** @type {?} */\nInfoWindow.prototype.zindex_changed;\n/** @type {?} */\nInfoWindow.prototype.initialized$;\n/** @type {?} */\nInfoWindow.prototype.infoWindow;\n/** @type {?} */\nInfoWindow.prototype.objectOptions;\n/** @type {?} */\nInfoWindow.prototype.inputChanges$;\n/** @type {?} */\nInfoWindow.prototype.template;\n/** @type {?} */\nInfoWindow.prototype.elementRef;\n/** @type {?} */\nInfoWindow.prototype.nguiMap;\n/** @type {?} */\nInfoWindow.prototype.nguiMapComponent;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [];\nconst /** @type {?} */ OUTPUTS = [ ];\nexport class BicyclingLayer extends BaseMapDirective {\n/**\n * @param {?} nguiMapComp\n */\nconstructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'BicyclingLayer', INPUTS, OUTPUTS);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map > bicycling-layer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction BicyclingLayer_tsickle_Closure_declarations() {\n/** @type {?} */\nBicyclingLayer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBicyclingLayer.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  ElementRef,\n  ViewEncapsulation,\n  EventEmitter,\n  SimpleChanges,\n  Output,\n  NgZone,\n  AfterViewInit, AfterViewChecked, OnChanges, OnDestroy\n} from '@angular/core';\n\nimport { OptionBuilder } from '../services/option-builder';\nimport { NavigatorGeolocation } from '../services/navigator-geolocation';\nimport { GeoCoder } from '../services/geo-coder';\nimport { NguiMap } from '../services/ngui-map';\nimport { NgMapApiLoader } from '../services/api-loader';\nimport { InfoWindow } from './info-window';\nimport { Subject } from 'rxjs/Subject';\nimport { debounceTime } from 'rxjs/operator/debounceTime';\nimport { toCamelCase } from '../services/util';\n\nconst /** @type {?} */ INPUTS = [\n  'backgroundColor', 'center', 'disableDefaultUI', 'disableDoubleClickZoom', 'draggable', 'draggableCursor',\n  'draggingCursor', 'heading', 'keyboardShortcuts', 'mapMaker', 'mapTypeControl', 'mapTypeId', 'maxZoom', 'minZoom',\n  'noClear', 'overviewMapControl', 'panControl', 'panControlOptions', 'rotateControl', 'scaleControl', 'scrollwheel',\n  'streetView', 'styles', 'tilt', 'zoom', 'streetViewControl', 'zoomControl', 'zoomControlOptions', 'mapTypeControlOptions',\n  'overviewMapControlOptions', 'rotateControlOptions', 'scaleControlOptions', 'streetViewControlOptions', 'fullscreenControl', 'fullscreenControlOptions',\n  'options',\n  // ngui-map-specific inputs\n  'geoFallbackCenter'\n];\n\nconst /** @type {?} */ OUTPUTS = [\n  'bounds_changed', 'center_changed', 'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'heading_changed', 'idle',\n  'typeid_changed', 'mousemove', 'mouseout', 'mouseover', 'projection_changed', 'resize', 'rightclick',\n  'tilesloaded', 'tile_changed', 'zoom_changed',\n  // to avoid DOM event conflicts\n  'mapClick', 'mapMouseover', 'mapMouseout', 'mapMousemove', 'mapDrag', 'mapDragend', 'mapDragstart'\n];\nexport class NguiMapComponent implements OnChanges, OnDestroy, AfterViewInit, AfterViewChecked {\npublic backgroundColor: any;\npublic center: any;\npublic disableDefaultUI: any;\npublic disableDoubleClickZoom: any;\npublic draggable: any;\npublic draggableCursor: any;\npublic draggingCursor: any;\npublic heading: any;\npublic keyboardShortcuts: any;\npublic mapMaker: any;\npublic mapTypeControl: any;\npublic mapTypeId: any;\npublic maxZoom: any;\npublic minZoom: any;\npublic noClear: any;\npublic overviewMapControl: any;\npublic panControl: any;\npublic panControlOptions: any;\npublic rotateControl: any;\npublic scaleControl: any;\npublic scrollwheel: any;\npublic streetView: any;\npublic styles: any;\npublic tilt: any;\npublic zoom: any;\npublic streetViewControl: any;\npublic zoomControl: any;\npublic zoomControlOptions: any;\npublic mapTypeControlOptions: any;\npublic overviewMapControlOptions: any;\npublic rotateControlOptions: any;\npublic scaleControlOptions: any;\npublic streetViewControlOptions: any;\npublic fullscreenControl: any;\npublic fullscreenControlOptions: any;\npublic options: any;\npublic geoFallbackCenter: any;\npublic bounds_changed: any;\npublic center_changed: any;\npublic click: any;\npublic dblclick: any;\npublic drag: any;\npublic dragend: any;\npublic dragstart: any;\npublic heading_changed: any;\npublic idle: any;\npublic typeid_changed: any;\npublic mousemove: any;\npublic mouseout: any;\npublic mouseover: any;\npublic projection_changed: any;\npublic resize: any;\npublic rightclick: any;\npublic tilesloaded: any;\npublic tile_changed: any;\npublic zoom_changed: any;\npublic mapClick: any;\npublic mapMouseover: any;\npublic mapMouseout: any;\npublic mapMousemove: any;\npublic mapDrag: any;\npublic mapDragend: any;\npublic mapDragstart: any;\npublic mapReady$: EventEmitter<any> = new EventEmitter();\npublic el: HTMLElement;\npublic map: google.maps.Map;\npublic mapOptions: google.maps.MapOptions = {};\npublic inputChanges$ = new Subject();\npublic infoWindows: { [id: string]: InfoWindow } = { };\npublic mapIdledOnce: boolean = false;\nprivate initializeMapAfterDisplayed = false;\nprivate apiLoaderSub;\n/**\n * @param {?} optionBuilder\n * @param {?} elementRef\n * @param {?} geolocation\n * @param {?} geoCoder\n * @param {?} nguiMap\n * @param {?} apiLoader\n * @param {?} zone\n */\nconstructor(\npublic optionBuilder: OptionBuilder,\npublic elementRef: ElementRef,\npublic geolocation: NavigatorGeolocation,\npublic geoCoder: GeoCoder,\npublic nguiMap: NguiMap,\npublic apiLoader: NgMapApiLoader,\npublic zone: NgZone,\n  ) {\n    apiLoader.load();\n\n    // all outputs needs to be initialized,\n    // http://stackoverflow.com/questions/37765519/angular2-directive-cannot-read-property-subscribe-of-undefined-with-outputs\n    OUTPUTS.forEach(output => this[output] = new EventEmitter());\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    this.apiLoaderSub = this.apiLoader.api$.subscribe(() => this.initializeMap());\n  }\n/**\n * @return {?}\n */\nngAfterViewChecked() {\n      if (this.initializeMapAfterDisplayed && this.el && this.el.offsetWidth > 0) {\n        this.initializeMap();\n      }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    this.inputChanges$.next(changes);\n  }\n/**\n * @return {?}\n */\ninitializeMap(): void {\n    this.el = this.elementRef.nativeElement.querySelector('.google-map');\n    if (this.el && this.el.offsetWidth === 0) {\n        this.initializeMapAfterDisplayed = true;\n        return;\n    }\n\n    this.initializeMapAfterDisplayed = false;\n    this.mapOptions = this.optionBuilder.googlizeAllInputs(INPUTS, this);\n\n\n    this.mapOptions.zoom = this.mapOptions.zoom || 15;\n    typeof this.mapOptions.center === 'string' && (delete this.mapOptions.center);\n\n    this.zone.runOutsideAngular(() => {\n      this.map = new google.maps.Map(this.el, this.mapOptions);\n      this.map['mapObjectName'] = 'NguiMapComponent';\n\n      if (!this.mapOptions.center) { // if center is not given as lat/lng\n        this.setCenter();\n      }\n\n      // set google events listeners and emits to this outputs listeners\n      this.nguiMap.setObjectEvents(OUTPUTS, this, 'map');\n\n      this.map.addListener('idle', () => {\n        if (!this.mapIdledOnce) {\n          this.mapIdledOnce = true;\n          setTimeout(() => { // Why????, subsribe and emit must not be in the same cycle???\n            this.mapReady$.emit(this.map);\n          });\n        }\n      });\n\n      // update map when input changes\n      debounceTime.call(this.inputChanges$, 1000)\n        .subscribe((changes: SimpleChanges) => this.nguiMap.updateGoogleObject(this.map, changes));\n\n      if (typeof window !== 'undefined' && ( /** @type {?} */((<any>window)))['nguiMapRef']) {\n        // expose map object for test and debugging on (<any>window)\n        ( /** @type {?} */((<any>window)))['nguiMapRef'].map = this.map;\n      }\n    });\n  }\n/**\n * @return {?}\n */\nsetCenter(): void {\n    if (!this['center']) { // center is not from user. Thus, we set the current location\n      this.geolocation.getCurrentPosition().subscribe(\n        position => {\n\n          let /** @type {?} */ latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n          this.map.setCenter(latLng);\n        },\n        error => {\n          console.error('ngui-map: Error finding the current position');\n          this.map.setCenter(this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }\n      );\n    }\n    else if (typeof this['center'] === 'string') {\n      this.geoCoder.geocode({address: this['center']}).subscribe(\n        results => {\n\n          this.map.setCenter(results[0].geometry.location);\n        },\n        error => {\n          this.map.setCenter(this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        });\n    }\n  }\n/**\n * @param {?} id\n * @param {?} anchor\n * @return {?}\n */\nopenInfoWindow(id: string, anchor: google.maps.MVCObject) {\n    this.infoWindows[id].open(anchor);\n  }\n/**\n * @param {?} id\n * @return {?}\n */\ncloseInfoWindow(id: string) {\n    // if infoWindow for id exists, close the infoWindow\n    if (this.infoWindows[id])\n      this.infoWindows[id].close();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.inputChanges$.complete();\n    if (this.el && !this.initializeMapAfterDisplayed) {\n      this.nguiMap.clearObjectEvents(OUTPUTS, this, 'map');\n    }\n    if (this.apiLoaderSub) {\n      this.apiLoaderSub.unsubscribe();\n    }\n  }\n/**\n * @param {?} mapObjectName\n * @param {?} mapObject\n * @return {?}\n */\naddToMapObjectGroup(mapObjectName: string, mapObject: any) {\n    let /** @type {?} */ groupName = toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n    this.map[groupName] = this.map[groupName] || [];\n    this.map[groupName].push(mapObject);\n  }\n/**\n * @param {?} mapObjectName\n * @param {?} mapObject\n * @return {?}\n */\nremoveFromMapObjectGroup(mapObjectName: string, mapObject: any) {\n    let /** @type {?} */ groupName = toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n    if (this.map && this.map[groupName]) {\n      let /** @type {?} */ index = this.map[groupName].indexOf(mapObject);\n\n      (index > -1) && this.map[groupName].splice(index, 1);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngui-map',\n  providers: [NguiMap, OptionBuilder, GeoCoder, NavigatorGeolocation],\n  styles: [`\n    ngui-map {display: block; height: 300px;}\n    .google-map {width: 100%; height: 100%}\n  `],\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"google-map\"></div>\n    <ng-content></ng-content>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OptionBuilder, },\n{type: ElementRef, },\n{type: NavigatorGeolocation, },\n{type: GeoCoder, },\n{type: NguiMap, },\n{type: NgMapApiLoader, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'mapReady$': [{ type: Output },],\n};\n}\n\nfunction NguiMapComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNguiMapComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNguiMapComponent.ctorParameters;\n/** @type {?} */\nNguiMapComponent.propDecorators;\n/** @type {?} */\nNguiMapComponent.prototype.backgroundColor;\n/** @type {?} */\nNguiMapComponent.prototype.center;\n/** @type {?} */\nNguiMapComponent.prototype.disableDefaultUI;\n/** @type {?} */\nNguiMapComponent.prototype.disableDoubleClickZoom;\n/** @type {?} */\nNguiMapComponent.prototype.draggable;\n/** @type {?} */\nNguiMapComponent.prototype.draggableCursor;\n/** @type {?} */\nNguiMapComponent.prototype.draggingCursor;\n/** @type {?} */\nNguiMapComponent.prototype.heading;\n/** @type {?} */\nNguiMapComponent.prototype.keyboardShortcuts;\n/** @type {?} */\nNguiMapComponent.prototype.mapMaker;\n/** @type {?} */\nNguiMapComponent.prototype.mapTypeControl;\n/** @type {?} */\nNguiMapComponent.prototype.mapTypeId;\n/** @type {?} */\nNguiMapComponent.prototype.maxZoom;\n/** @type {?} */\nNguiMapComponent.prototype.minZoom;\n/** @type {?} */\nNguiMapComponent.prototype.noClear;\n/** @type {?} */\nNguiMapComponent.prototype.overviewMapControl;\n/** @type {?} */\nNguiMapComponent.prototype.panControl;\n/** @type {?} */\nNguiMapComponent.prototype.panControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.rotateControl;\n/** @type {?} */\nNguiMapComponent.prototype.scaleControl;\n/** @type {?} */\nNguiMapComponent.prototype.scrollwheel;\n/** @type {?} */\nNguiMapComponent.prototype.streetView;\n/** @type {?} */\nNguiMapComponent.prototype.styles;\n/** @type {?} */\nNguiMapComponent.prototype.tilt;\n/** @type {?} */\nNguiMapComponent.prototype.zoom;\n/** @type {?} */\nNguiMapComponent.prototype.streetViewControl;\n/** @type {?} */\nNguiMapComponent.prototype.zoomControl;\n/** @type {?} */\nNguiMapComponent.prototype.zoomControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.mapTypeControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.overviewMapControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.rotateControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.scaleControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.streetViewControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.fullscreenControl;\n/** @type {?} */\nNguiMapComponent.prototype.fullscreenControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.options;\n/** @type {?} */\nNguiMapComponent.prototype.geoFallbackCenter;\n/** @type {?} */\nNguiMapComponent.prototype.bounds_changed;\n/** @type {?} */\nNguiMapComponent.prototype.center_changed;\n/** @type {?} */\nNguiMapComponent.prototype.click;\n/** @type {?} */\nNguiMapComponent.prototype.dblclick;\n/** @type {?} */\nNguiMapComponent.prototype.drag;\n/** @type {?} */\nNguiMapComponent.prototype.dragend;\n/** @type {?} */\nNguiMapComponent.prototype.dragstart;\n/** @type {?} */\nNguiMapComponent.prototype.heading_changed;\n/** @type {?} */\nNguiMapComponent.prototype.idle;\n/** @type {?} */\nNguiMapComponent.prototype.typeid_changed;\n/** @type {?} */\nNguiMapComponent.prototype.mousemove;\n/** @type {?} */\nNguiMapComponent.prototype.mouseout;\n/** @type {?} */\nNguiMapComponent.prototype.mouseover;\n/** @type {?} */\nNguiMapComponent.prototype.projection_changed;\n/** @type {?} */\nNguiMapComponent.prototype.resize;\n/** @type {?} */\nNguiMapComponent.prototype.rightclick;\n/** @type {?} */\nNguiMapComponent.prototype.tilesloaded;\n/** @type {?} */\nNguiMapComponent.prototype.tile_changed;\n/** @type {?} */\nNguiMapComponent.prototype.zoom_changed;\n/** @type {?} */\nNguiMapComponent.prototype.mapClick;\n/** @type {?} */\nNguiMapComponent.prototype.mapMouseover;\n/** @type {?} */\nNguiMapComponent.prototype.mapMouseout;\n/** @type {?} */\nNguiMapComponent.prototype.mapMousemove;\n/** @type {?} */\nNguiMapComponent.prototype.mapDrag;\n/** @type {?} */\nNguiMapComponent.prototype.mapDragend;\n/** @type {?} */\nNguiMapComponent.prototype.mapDragstart;\n/** @type {?} */\nNguiMapComponent.prototype.mapReady$;\n/** @type {?} */\nNguiMapComponent.prototype.el;\n/** @type {?} */\nNguiMapComponent.prototype.map;\n/** @type {?} */\nNguiMapComponent.prototype.mapOptions;\n/** @type {?} */\nNguiMapComponent.prototype.inputChanges$;\n/** @type {?} */\nNguiMapComponent.prototype.infoWindows;\n/** @type {?} */\nNguiMapComponent.prototype.mapIdledOnce;\n/** @type {?} */\nNguiMapComponent.prototype.initializeMapAfterDisplayed;\n/** @type {?} */\nNguiMapComponent.prototype.apiLoaderSub;\n/** @type {?} */\nNguiMapComponent.prototype.optionBuilder;\n/** @type {?} */\nNguiMapComponent.prototype.elementRef;\n/** @type {?} */\nNguiMapComponent.prototype.geolocation;\n/** @type {?} */\nNguiMapComponent.prototype.geoCoder;\n/** @type {?} */\nNguiMapComponent.prototype.nguiMap;\n/** @type {?} */\nNguiMapComponent.prototype.apiLoader;\n/** @type {?} */\nNguiMapComponent.prototype.zone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, SimpleChanges, NgZone } from '@angular/core';\nimport { OptionBuilder } from './option-builder';\nimport { GeoCoder } from './geo-coder';\n/**\n * collection of map instance-related properties and methods\n */\nexport class NguiMap {\n/**\n * @param {?} geoCoder\n * @param {?} optionBuilder\n * @param {?} zone\n */\nconstructor(\nprivate geoCoder: GeoCoder,\nprivate optionBuilder: OptionBuilder,\nprivate zone: NgZone,\n  ) {}\n/**\n * @param {?} definedEvents\n * @param {?} thisObj\n * @param {?} prefix\n * @return {?}\n */\nsetObjectEvents(definedEvents: string[], thisObj: any, prefix: string) {\n    definedEvents.forEach(definedEvent => {\n      let /** @type {?} */ eventName = definedEvent\n        .replace(/([A-Z])/g, ($1) => `_${$1.toLowerCase()}`) // positionChanged -> position_changed\n        .replace(/^map_/, '');                               // map_click -> click  to avoid DOM conflicts\n\n      let /** @type {?} */ zone = this.zone;\n      zone.runOutsideAngular(() => {\n        thisObj[prefix].addListener(eventName, function(event: google.maps.event) {\n          let /** @type {?} */ param: any = event ? event : {};\n          param.target = this;\n          zone.run(() => thisObj[definedEvent].emit(param));\n        });\n      });\n    });\n  }\n/**\n * @param {?} definedEvents\n * @param {?} thisObj\n * @param {?} prefix\n * @return {?}\n */\nclearObjectEvents(definedEvents: string[], thisObj: any, prefix: string) {\n    definedEvents.forEach(definedEvent => {\n      let /** @type {?} */ eventName = definedEvent\n        .replace(/([A-Z])/g, ($1) => `_${$1.toLowerCase()}`) // positionChanged -> position_changed\n        .replace(/^map_/, '');                               // map_click -> click  to avoid DOM conflicts\n\n      this.zone.runOutsideAngular(() => {\n        if (thisObj[prefix]) {\n          google.maps.event.clearListeners(thisObj[prefix], eventName);\n        }\n      });\n    });\n\n    if (thisObj[prefix]) {\n      if (thisObj[prefix].setMap) {\n        thisObj[prefix].setMap(null);\n      }\n\n      delete thisObj[prefix].nguiMapComponent;\n      delete thisObj[prefix];\n    }\n\n  }\n\n  updateGoogleObject = (object: any, changes: SimpleChanges)  => {\n    let /** @type {?} */ val: any, /** @type {?} */ currentValue: any, /** @type {?} */ setMethodName: string;\n    if (object) {\n      for (let /** @type {?} */ key in changes) {\n        setMethodName = `set${key.replace(/^[a-z]/, x => x.toUpperCase()) }`;\n        currentValue = changes[key].currentValue;\n        if (['position', 'center'].indexOf(key) !== -1 && typeof currentValue === 'string') {\n          // To preserve setMethod name in Observable callback, wrap it as a function, then execute\n          ((setMethodName) => {\n            this.geoCoder.geocode({address: currentValue}).subscribe(results => {\n              if (typeof object[setMethodName] === 'function') {\n                object[setMethodName](results[0].geometry.location);\n              } else {\n                console.error(\n                  'Not all options are dynamically updatable according to Googles Maps API V3 documentation.\\n' +\n                  'Please check Google Maps API documentation, and use \"setOptions\" instead.'\n                );\n              }\n            });\n          })(setMethodName);\n        } else {\n          val =  this.optionBuilder.googlize(currentValue);\n          if (typeof object[setMethodName] === 'function') {\n            object[setMethodName](val);\n          } else {\n            console.error(\n              'Not all options are dynamically updatable according to Googles Maps API V3 documentation.\\n' +\n              'Please check Google Maps API documentation, and use \"setOptions\" instead.'\n            );\n          }\n        }\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: GeoCoder, },\n{type: OptionBuilder, },\n{type: NgZone, },\n];\n}\n\nfunction NguiMap_tsickle_Closure_declarations() {\n/** @type {?} */\nNguiMap.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNguiMap.ctorParameters;\n/** @type {?} */\nNguiMap.prototype.updateGoogleObject;\n/** @type {?} */\nNguiMap.prototype.geoCoder;\n/** @type {?} */\nNguiMap.prototype.optionBuilder;\n/** @type {?} */\nNguiMap.prototype.zone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { NgMapApiLoader } from './api-loader';\n/**\n *   Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)\n *   service for Google Geocoder service\n */\nexport class GeoCoder implements OnDestroy {\nprivate apiLoaderSubs = [];\n/**\n * @param {?} apiLoader\n */\nconstructor(private apiLoader: NgMapApiLoader) {}\n/**\n * @param {?} options\n * @return {?}\n */\ngeocode(options: google.maps.GeocoderRequest) {\n    return new Observable((responseObserver: Observer<any>) => {\n        this.apiLoaderSubs.push(this.apiLoader.api$\n          .subscribe(() => this.requestGeocode(options, responseObserver)));\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.apiLoaderSubs.map(sub => sub.unsubscribe());\n  }\n/**\n * @param {?} options\n * @param {?} observer\n * @return {?}\n */\nprivate requestGeocode(options, observer) {\n    const /** @type {?} */ geocoder = new google.maps.Geocoder();\n    geocoder.geocode(options, function (results, status) {\n      if (status === google.maps.GeocoderStatus.OK) {\n        observer.next(results);\n        observer.complete();\n      } else {\n        observer.error(results);\n      }\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgMapApiLoader, },\n];\n}\n\nfunction GeoCoder_tsickle_Closure_declarations() {\n/** @type {?} */\nGeoCoder.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGeoCoder.ctorParameters;\n/** @type {?} */\nGeoCoder.prototype.apiLoaderSubs;\n/** @type {?} */\nGeoCoder.prototype.apiLoader;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, Optional, NgZone, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { NG_MAP_CONFIG_TOKEN } from './config';\nimport { isMapsApiLoaded } from './util';\nimport { first } from 'rxjs/operator/first';\n/**\n * @abstract\n */\nexport abstract class NgMapApiLoader implements OnDestroy {\n  api$: ReplaySubject<any> = first.call(new ReplaySubject(1));\n/**\n * @abstract\n * @return {?}\n */\nload() {}\n/**\n * @param {?} config\n */\nconstructor(protected config) {\n    this.config = this.config || {apiUrl: 'https://maps.google.com/maps/api/js'};\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.api$.complete();\n  }\n}\n\nfunction NgMapApiLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nNgMapApiLoader.prototype.api$;\n/** @type {?} */\nNgMapApiLoader.prototype.config;\n}\n\nexport class NgMapAsyncCallbackApiLoader extends NgMapApiLoader {\n/**\n * @param {?} zone\n * @param {?} config\n */\nconstructor(protected zone: NgZone,   config) {\n    super(config);\n  }\n/**\n * @return {?}\n */\nload() {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    if (isMapsApiLoaded()) {\n      this.api$.next(google.maps);\n    } else if (!document.querySelector('#ngui-map-api')) {\n      ( /** @type {?} */((<any>window)))['nguiMapRef'] = ( /** @type {?} */((<any>window)))['nguiMapRef'] || [];\n      ( /** @type {?} */((<any>window)))['nguiMapRef'].push({ zone: this.zone, componentFn: () => this.api$.next(google.maps)});\n      this.addGoogleMapsApi();\n    }\n  }\n/**\n * @return {?}\n */\nprivate addGoogleMapsApi() {\n    ( /** @type {?} */((<any>window)))['initNguiMap'] = ( /** @type {?} */((<any>window)))['initNguiMap'] || function() {\n      ( /** @type {?} */((<any>window)))['nguiMapRef'].forEach(nguiMapRef => {\n        nguiMapRef.zone.run(function() { nguiMapRef.componentFn(); });\n      });\n      ( /** @type {?} */((<any>window)))['nguiMapRef'].splice(0, ( /** @type {?} */((<any>window)))['nguiMapRef'].length);\n    };\n\n    let /** @type {?} */ script = document.createElement( 'script' );\n    script.id = 'ngui-map-api';\n\n    // script.src = \"https://maps.google.com/maps/api/js?callback=initNguiMap\";\n    let /** @type {?} */ apiUrl = this.config.apiUrl ;\n    apiUrl += apiUrl.indexOf('?') !== -1 ? '&' : '?';\n    script.src = apiUrl + 'callback=initNguiMap';\n    document.querySelector('body').appendChild(script);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MAP_CONFIG_TOKEN, ] }, ]},\n];\n}\n\nfunction NgMapAsyncCallbackApiLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nNgMapAsyncCallbackApiLoader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgMapAsyncCallbackApiLoader.ctorParameters;\n/** @type {?} */\nNgMapAsyncCallbackApiLoader.prototype.zone;\n}\n\nexport class NgMapAsyncApiLoader extends NgMapApiLoader {\n/**\n * @param {?} config\n */\nconstructor(  config) {\n    super(config);\n  }\n/**\n * @return {?}\n */\nload() {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    if (isMapsApiLoaded()) {\n      this.api$.next(google.maps);\n    } else if (!document.querySelector('#ngui-map-api')) {\n      let /** @type {?} */ script = document.createElement('script');\n      script.id = 'ngui-map-api';\n\n      script.async = true;\n      script.onload = () => this.api$.next(google.maps);\n      script.src = this.config.apiUrl;\n      document.querySelector('body').appendChild(script);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MAP_CONFIG_TOKEN, ] }, ]},\n];\n}\n\nfunction NgMapAsyncApiLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nNgMapAsyncApiLoader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgMapAsyncApiLoader.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const /** @type {?} */ NG_MAP_CONFIG_TOKEN = new InjectionToken<ConfigOption>('NG_MAP_CONFIG_TOKEN');\nexport interface ConfigOption {\n  apiUrl?: string;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { IJson } from './util';\n/**\n *  service for navigator.geolocation methods\n */\nexport class NavigatorGeolocation {\n/**\n * @param {?=} geoLocationOptions\n * @return {?}\n */\ngetCurrentPosition(geoLocationOptions?: IJson): Observable<any> {\n    geoLocationOptions = geoLocationOptions || { timeout: 5000 };\n\n    return new Observable<any>((responseObserver: Observer<any>) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            responseObserver.next(position);\n            responseObserver.complete();\n          },\n          (evt) => responseObserver.error(evt),\n          geoLocationOptions\n        );\n      } else {\n        responseObserver.error('Browser Geolocation service failed.');\n      }\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NavigatorGeolocation_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigatorGeolocation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavigatorGeolocation.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { getJSON, IJson } from './util';\n/**\n * change any object to google object options\n * e.g. [1,2] -> new google.maps.LatLng(1,2);\n */\nexport class OptionBuilder {\n/**\n * @param {?} definedInputs\n * @param {?} userInputs\n * @return {?}\n */\ngooglizeAllInputs(definedInputs: string[], userInputs: any) {\n    let /** @type {?} */ options: any = {};\n\n    // if options given from user, only take options and ignore other inputs\n    if (userInputs.options) {\n      console.log('userInputs.options .................', userInputs.options);\n      options = userInputs.options;\n      if (!this.onlyOptionsGiven(definedInputs, userInputs)) {\n        console.error('when \"options\" are used, other options are ignored');\n      }\n    } else { // if options not given, process all user inputs\n      definedInputs.forEach(input => {\n        if (userInputs[input] !== undefined)  {\n          options[input] = this.googlize(userInputs[input], {key: input});\n        }\n      });\n    }\n    return options;\n  }\n/**\n * @param {?} inputs\n * @param {?=} options\n * @return {?}\n */\ngooglizeMultiple(inputs: any[], options?: IJson): any {\n    options =  options || {};\n    for (let /** @type {?} */ key in inputs) {\n      let /** @type {?} */ val = inputs[key];\n      // (non-strings are fully converted)\n      if (typeof val !== 'string') {\n        options[key] = val;\n      } // sometimes '0' needed to stay as it is\n      else if (!(options['doNotConverStringToNumber'] && val.match(/^[0-9]+$/))) {\n        options[key] = this.googlize(val, {key: key});\n      }\n    } // for(var key in attrs)\n    return options;\n  }\n/**\n * @param {?} input\n * @param {?=} options\n * @return {?}\n */\ngooglize(input: any, options?: IJson): any {\n    options = options || {};\n    let /** @type {?} */ output: any = input;\n    if (typeof input === 'string') { // convert string to a google object\n      if (input === 'false') {\n        output = false;\n      } else if (input === '0') {\n        output = 0;\n      } else {\n        output =\n          // -> googlize -> getJsonParsed -> googlizeMultiple -> googlize until all elements are parsed\n          this.getJSONParsed(input, options)\n\n          /* Foo.Bar(...) -> new google.maps.Foo.Bar(...) */\n          || this.getAnyMapObject(input)\n\n          /*  MapTypeID.HYBRID -> new google.maps.MapTypeID.HYBRID */\n          || this.getAnyMapConstant(input, options)\n\n          /*  2016-06-20 -> new Date('2016-06-20') */\n          || this.getDateObject(input)\n\n          || input;\n      }\n    }\n\n    if (options['key']) {\n      let /** @type {?} */ key: string = /** @type {?} */(( <string>options['key']));\n      if (output instanceof Array) { // e.g., [1, 2]\n        if (key === 'bounds') {\n          output = new google.maps.LatLngBounds(output[0], output[1]);\n        } else if (key === 'icons') {\n          output = this.getMapIcons(output);\n        } else if (key === 'position' || key.match(/^geoFallback/) ) {\n          output = this.getLatLng(output);\n        }\n      } else if (output instanceof Object) {\n        if (key === 'icon') {\n          output = this.getMarkerIcon(output);\n        }\n        else if (key.match(/ControlOptions$/)) {\n          output = this.getMapControlOption(output);\n        }\n      }\n    }\n\n    // delete keys only for processing, not used by google\n    delete output['doNotConverStringToNumber'];\n    delete output['key'];\n\n    return output;\n  }\n/**\n * @param {?} input\n * @return {?}\n */\nprivate getLatLng(input: any): google.maps.LatLng | Array<google.maps.LatLng> {\n    let /** @type {?} */ output: google.maps.LatLng | Array<google.maps.LatLng>;\n    if (input[0].constructor === Array) { // [[1,2],[3,4]]\n      output = ( /** @type {?} */((<any[]>input))).map((el: number[]) => new google.maps.LatLng(el[0], el[1]));\n    } else if (!isNaN(parseFloat(input[0])) && isFinite(input[0])) {\n      output = new google.maps.LatLng(input[0], input[1]);\n    }\n    return output;\n  }\n/**\n * @param {?} input\n * @param {?} options\n * @return {?}\n */\nprivate getJSONParsed(input: any, options: IJson): IJson {\n    let /** @type {?} */ output: any;\n    try {\n      output = getJSON(input);\n      if (output instanceof Array) {\n        // [{a:1}] : not lat/lng ones\n\n        if (output[0].constructor !== Object) { // [[1,2],[3,4]] or [1,2]\n          output = this.getLatLng(output);\n        }\n      }\n      // JSON is an object (not array or null)\n      else if (output === Object(output)) {\n        // check for nested hashes and convert to Google API options\n        let /** @type {?} */ newOptions = options;\n        newOptions['doNotConverStringToNumber'] = true;\n        output = this.googlizeMultiple(output, newOptions);\n      }\n    } catch ( /** @type {?} */e) {\n    }\n    return output;\n  }\n/**\n * @param {?} input\n * @return {?}\n */\nprivate getAnyMapObject(input: string): any {\n    let /** @type {?} */ output: any;\n    if (input.match(/^[A-Z][a-zA-Z0-9]+\\(.*\\)$/)) {\n      try {\n        output = Function(`return new google.maps.${input};`)();\n      } catch ( /** @type {?} */e) {}\n    }\n    return output;\n  }\n/**\n * @param {?} input\n * @param {?} options\n * @return {?}\n */\nprivate getAnyMapConstant(input: string, options: IJson): any {\n    let /** @type {?} */ output: any;\n\n    if (input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/)) { // e.g. MapTypeID.HYBRID\n      try {\n        let /** @type {?} */ matches = input.match(/^([A-Z][a-zA-Z0-9]+)\\.([A-Z]+)$/);\n        output = google.maps[matches[1]][matches[2]];\n      } catch ( /** @type {?} */e) {}\n    } else if (input.match(/^[A-Z]+$/)) { // e.g. HYBRID\n      try {\n        let /** @type {?} */ capitalizedKey = ( /** @type {?} */((<string>options['key']))).charAt(0).toUpperCase() +\n          ( /** @type {?} */((<string>options['key']))).slice(1);\n        output = google.maps[capitalizedKey][input];\n      } catch ( /** @type {?} */e) {}\n    }\n    return output;\n  }\n/**\n * streetviewControl, panControl, etc, not a general control\n * @param {?} controlOptions\n * @return {?}\n */\nprivate getMapControlOption(controlOptions: IJson): IJson {\n    let /** @type {?} */ newControlOptions: IJson = controlOptions;\n\n    for (let /** @type {?} */ key in newControlOptions) { // assign the right values\n      if (newControlOptions[key]) {\n        let /** @type {?} */ value = newControlOptions[key];\n\n        if (typeof value === 'string') {\n          value = ( /** @type {?} */((<string>value))).toUpperCase();\n        }\n        else if (key === 'mapTypeIds') {\n          value = ( /** @type {?} */((<any[]>value))).map(function (str) {\n            if (str.match(/^[A-Z]+$/)) { // if constant\n              return google.maps.MapTypeId[str.toUpperCase()];\n            } else { // else, custom map-type\n              return str;\n            }\n          });\n        }\n\n        if (key === 'style') {\n          let /** @type {?} */ objName = key.replace(/Options$/, '') + 'Style';\n          newControlOptions[key] = google.maps[objName][ /** @type {?} */((<any>value))];\n        }\n        else if (key === 'position') {\n          newControlOptions[key] = google.maps.ControlPosition[ /** @type {?} */((<any>value))];\n        }\n        else {\n          newControlOptions[key] = value;\n        }\n      }\n    }\n\n    return newControlOptions;\n  }\n/**\n * @param {?} input\n * @return {?}\n */\nprivate getDateObject(input: string): Date {\n    let /** @type {?} */ output: Date;\n\n    if (input.match(/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*)?)([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/)) {\n      try {\n        output = new Date(input);\n      } catch ( /** @type {?} */e) {}\n    }\n    return output;\n  }\n/**\n * @param {?} input\n * @return {?}\n */\nprivate getMapIcons(input: any[]): any[] {\n    return input.map(el => {\n      if (el.icon.path.match(/^[A-Z_]+$/)) {\n        el.icon.path = google.maps.SymbolPath[el.icon.path];\n      }\n      return el;\n    });\n  }\n/**\n * @param {?} input\n * @return {?}\n */\nprivate getMarkerIcon(input: any): any {\n    let /** @type {?} */ output = input;\n\n    if (('' + output.path).match(/^[A-Z_]+$/)) {\n      output.path = google.maps.SymbolPath[output.path];\n    }\n\n    for (let /** @type {?} */ key in output) {\n      let /** @type {?} */ arr = output[key];\n      if (key === 'anchor' || key === 'origin' || key === 'labelOrigin') {\n        output[key] = new google.maps.Point(arr[0], arr[1]);\n    } else if (key === 'size' || key === 'scaledSize') {\n        output[key] = new google.maps.Size(arr[0], arr[1]);\n      }\n    }\n\n    return output;\n  }\n/**\n * @param {?} definedInputs\n * @param {?} userInputs\n * @return {?}\n */\nprivate onlyOptionsGiven(definedInputs: string[], userInputs: any): boolean {\n    for (let /** @type {?} */ i = 0; i < definedInputs.length; i++) {\n      let /** @type {?} */ input = definedInputs[i];\n      if (input !== 'options' && typeof userInputs[input] !== 'undefined') {\n        return false;\n      }\n    }\n    return true;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction OptionBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nOptionBuilder.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOptionBuilder.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * return json string from json-like string\n * @param {?} str\n * @return {?}\n */\nexport function jsonize(str: string): string {\n  try {       // if parsable already, return as it is\n    JSON.parse(str);\n    return str;\n  } catch ( /** @type {?} */e) { // if not parsable, change little\n    return str\n      .replace(/([\\$\\w]+)\\s*:/g, // wrap keys without double quote\n        function(_: any, $1: any) {\n          return '\"' + $1 + '\":';\n        }\n      )\n      .replace(/'([^']+)'/g,   // replacing single quote to double quote\n        function(_: any, $1: any) {\n          return '\"' + $1 + '\"';\n        }\n      );\n  }\n}\n/**\n * Returns string to an object by using JSON.parse()\n * @param {?} input\n * @return {?}\n */\nexport function getJSON(input: any): any {\n  if (typeof input === 'string') {\n    const /** @type {?} */ re = /^[\\+\\-]?[0-9\\.]+,[ ]*\\ ?[\\+\\-]?[0-9\\.]+$/; // lat,lng\n    if (input.match(re)) {\n      input = '[' + input + ']';\n    }\n    return JSON.parse(jsonize(input));\n  } else {\n    return input;\n  }\n}\n\n/**\n * json type definition\n */\n/* tslint:disable */\n//interface IJsonArray extends Array<string|number|boolean|Date|IJson|IJsonArray> { }\nexport interface IJson {\n  //[x: string]: string|number|boolean|Date|IJson|IJsonArray;\n  [x: string]: string|number|boolean|Date|IJson|Array<string|number|boolean|Date|IJson>;\n}\n/**\n * Returns camel-cased from string 'Foo Bar' to 'fooBar'\n * @param {?} str\n * @return {?}\n */\nexport function toCamelCase(str: string): string {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(letter, index) {\n    return index === 0 ? letter.toLowerCase() : letter.toUpperCase();\n  }).replace(/\\s+/g, '');\n}\n/**\n * @return {?}\n */\nexport function isMapsApiLoaded() {\n  return typeof google === 'object' && typeof google.maps === 'object';\n}\n","import {EventEmitter, SimpleChanges, Output, OnInit, OnChanges, OnDestroy} from '@angular/core';\n\nimport { OptionBuilder } from '../services/option-builder';\nimport { NguiMap } from '../services/ngui-map';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n/**\n * @abstract\n */\nexport abstract class BaseMapDirective implements OnInit, OnChanges, OnDestroy {\n  // this should be redefined on each childr directive\n   initialized$: EventEmitter<any> = new EventEmitter();\npublic mapObject: any;\npublic objectOptions: any;\npublic nguiMap: NguiMap;\npublic optionBuilder: OptionBuilder;\npublic libraryName: string;\n  protected _subscriptions = [];\n/**\n * @param {?} nguiMapComponent\n * @param {?} mapObjectName\n * @param {?} inputs\n * @param {?} outputs\n */\nconstructor(\n    protected nguiMapComponent: NguiMapComponent,\npublic    mapObjectName: string,\n    protected inputs: string[],\n    protected outputs: string[]\n  ) {\n    this.nguiMap = this.nguiMapComponent['nguiMap'];\n    this.optionBuilder = this.nguiMapComponent['optionBuilder'];\n    // all outputs must be initialized\n    this.outputs.forEach(output => this[output] = new EventEmitter());\n    this.mapObjectName = mapObjectName;\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\n      this.initialize();\n    } else {\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n    }\n  }\n/**\n * @return {?}\n */\ninitialize(): void {\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\n\n    // will be set after geocoded\n    typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n    typeof this.objectOptions.center === 'string' && (delete this.objectOptions.center);\n\n    // noinspection TypeScriptUnresolvedFunction\n    if (this.libraryName) {\n      this.mapObject = new google.maps[this.libraryName][this.mapObjectName](this.objectOptions);\n    } else {\n      this.mapObject = new google.maps[this.mapObjectName](this.objectOptions);\n    }\n    this.mapObject.setMap(this.nguiMapComponent.map);\n    this.mapObject['mapObjectName'] = this.mapObjectName;\n    this.mapObject['nguiMapComponent'] = this.nguiMapComponent;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n\n    this.nguiMap.updateGoogleObject(this.mapObject, changes);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._subscriptions.map(subscription => subscription.unsubscribe());\n    this.nguiMapComponent.removeFromMapObjectGroup(this.mapObjectName, this.mapObject);\n\n    if (this.mapObject) {\n      this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');\n    }\n  }\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'initialized$': [{ type: Output },],\n};\n}\n\nfunction BaseMapDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseMapDirective.propDecorators;\n/** @type {?} */\nBaseMapDirective.prototype.initialized$;\n/** @type {?} */\nBaseMapDirective.prototype.mapObject;\n/** @type {?} */\nBaseMapDirective.prototype.objectOptions;\n/** @type {?} */\nBaseMapDirective.prototype.nguiMap;\n/** @type {?} */\nBaseMapDirective.prototype.optionBuilder;\n/** @type {?} */\nBaseMapDirective.prototype.libraryName;\n/** @type {?} */\nBaseMapDirective.prototype._subscriptions;\n/** @type {?} */\nBaseMapDirective.prototype.nguiMapComponent;\n/** @type {?} */\nBaseMapDirective.prototype.mapObjectName;\n/** @type {?} */\nBaseMapDirective.prototype.inputs;\n/** @type {?} */\nBaseMapDirective.prototype.outputs;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["OUTPUTS","INPUTS","debounceTime","Subject","Observable","first","ReplaySubject"],"mappings":"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"}