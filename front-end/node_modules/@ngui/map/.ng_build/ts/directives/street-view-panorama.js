import { Directive } from '@angular/core';
import { BaseMapDirective } from './base-map-directive';
import { NguiMapComponent } from '../components/ngui-map.component';
const /** @type {?} */ INPUTS = [
    'selector', 'options',
    'addressControl', 'addressControlOptions', 'clickToGo', 'disableDefaultUI', 'disableDoubleClickZoom',
    'enableCloseButton', 'fullscreenControl', 'fullscreenControlOptions', 'imageDateControl', 'linksControl',
    'motionTracking', 'motionTrackingControl', 'panControl', 'panControlOptions', 'pano',
    'position', 'pov', 'scrollwheel', 'showRoadLabels', 'visible', 'zoomControl', 'zoomControlOptions'
];
const /** @type {?} */ OUTPUTS = [
    'closeclick', 'pano_changed', 'position_changed', 'pov_changed', 'resize', 'status_changed',
    'visible_changed', 'zoom_changed'
];
export class StreetViewPanorama extends BaseMapDirective {
    /**
     * @param {?} nguiMapComp
     */
    constructor(nguiMapComp) {
        super(nguiMapComp, 'StreetViewPanorama', INPUTS, OUTPUTS);
    }
    /**
     * @return {?}
     */
    initialize() {
        this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);
        let /** @type {?} */ element;
        if (this.objectOptions.selector) {
            // noinspection TypeScriptValidateTypes
            element = document.querySelector(this['selector']);
            delete this.objectOptions.selector;
        }
        else {
            element = this.nguiMapComponent.el;
        }
        // will be set after geocoded
        typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);
        this.mapObject = new google.maps[this.mapObjectName](element, this.objectOptions);
        this.mapObject['mapObjectName'] = this.mapObjectName;
        this.mapObject['nguiMapComponent'] = this.nguiMapComponent;
        // set google events listeners and emits to this outputs listeners
        this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');
        this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);
        this.initialized$.emit(this.mapObject);
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        if (this.nguiMapComponent.el) {
            this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');
        }
    }
}
StreetViewPanorama.decorators = [
    { type: Directive, args: [{
                selector: 'ngui-map > street-view-panorama',
                inputs: INPUTS,
                outputs: OUTPUTS,
            },] },
];
/**
 * @nocollapse
 */
StreetViewPanorama.ctorParameters = () => [
    { type: NguiMapComponent, },
];
function StreetViewPanorama_tsickle_Closure_declarations() {
    /** @type {?} */
    StreetViewPanorama.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    StreetViewPanorama.ctorParameters;
    /** @type {?} */
    StreetViewPanorama.prototype.selector;
    /** @type {?} */
    StreetViewPanorama.prototype.options;
    /** @type {?} */
    StreetViewPanorama.prototype.addressControl;
    /** @type {?} */
    StreetViewPanorama.prototype.addressControlOptions;
    /** @type {?} */
    StreetViewPanorama.prototype.clickToGo;
    /** @type {?} */
    StreetViewPanorama.prototype.disableDefaultUI;
    /** @type {?} */
    StreetViewPanorama.prototype.disableDoubleClickZoom;
    /** @type {?} */
    StreetViewPanorama.prototype.enableCloseButton;
    /** @type {?} */
    StreetViewPanorama.prototype.fullscreenControl;
    /** @type {?} */
    StreetViewPanorama.prototype.fullscreenControlOptions;
    /** @type {?} */
    StreetViewPanorama.prototype.imageDateControl;
    /** @type {?} */
    StreetViewPanorama.prototype.linksControl;
    /** @type {?} */
    StreetViewPanorama.prototype.motionTracking;
    /** @type {?} */
    StreetViewPanorama.prototype.motionTrackingControl;
    /** @type {?} */
    StreetViewPanorama.prototype.panControl;
    /** @type {?} */
    StreetViewPanorama.prototype.panControlOptions;
    /** @type {?} */
    StreetViewPanorama.prototype.pano;
    /** @type {?} */
    StreetViewPanorama.prototype.position;
    /** @type {?} */
    StreetViewPanorama.prototype.pov;
    /** @type {?} */
    StreetViewPanorama.prototype.scrollwheel;
    /** @type {?} */
    StreetViewPanorama.prototype.showRoadLabels;
    /** @type {?} */
    StreetViewPanorama.prototype.visible;
    /** @type {?} */
    StreetViewPanorama.prototype.zoomControl;
    /** @type {?} */
    StreetViewPanorama.prototype.zoomControlOptions;
    /** @type {?} */
    StreetViewPanorama.prototype.closeclick;
    /** @type {?} */
    StreetViewPanorama.prototype.pano_changed;
    /** @type {?} */
    StreetViewPanorama.prototype.position_changed;
    /** @type {?} */
    StreetViewPanorama.prototype.pov_changed;
    /** @type {?} */
    StreetViewPanorama.prototype.resize;
    /** @type {?} */
    StreetViewPanorama.prototype.status_changed;
    /** @type {?} */
    StreetViewPanorama.prototype.visible_changed;
    /** @type {?} */
    StreetViewPanorama.prototype.zoom_changed;
}
//# sourceMappingURL=street-view-panorama.js.map