{"version":3,"sources":["../tmp/directives/directions-renderer.ts"],"names":[],"mappings":"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","file":"directions-renderer.js","sourceRoot":"","sourcesContent":["import { Input, Directive, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\nimport { NavigatorGeolocation } from '../services/navigator-geolocation';\n\nconst /** @type {?} */ INPUTS = [\n  'directions', 'draggable', 'hideRouteList', 'infoWindow', 'panel', 'markerOptions',\n  'polylineOptions', 'preserveViewport', 'routeIndex', 'suppressBicyclingLayer',\n  'suppressInfoWindows', 'suppressMarkers', 'suppressPolylines'\n];\nconst /** @type {?} */ OUTPUTS = ['directions_changed'];\nexport class DirectionsRenderer extends BaseMapDirective implements OnChanges, OnDestroy {\npublic directions: any;\npublic draggable: any;\npublic hideRouteList: any;\npublic infoWindow: any;\npublic panel: any;\npublic markerOptions: any;\npublic polylineOptions: any;\npublic preserveViewport: any;\npublic routeIndex: any;\npublic suppressBicyclingLayer: any;\npublic suppressInfoWindows: any;\npublic suppressMarkers: any;\npublic suppressPolylines: any;\npublic directions_changed: any; // generated by ngc-pre-compiler.js\n\n  // tslint:disable-next-line\n   directionsRequest: google.maps.DirectionsRequest;\n\n  directionsService: google.maps.DirectionsService;\n  directionsRenderer: google.maps.DirectionsRenderer;\n/**\n * @param {?} nguiMapComponent\n * @param {?} geolocation\n */\nconstructor(\n    nguiMapComponent: NguiMapComponent,\npublic geolocation: NavigatorGeolocation\n  ) {\n    super(nguiMapComponent, 'DirectionsRenderer', INPUTS, OUTPUTS);\n  }\n/**\n * @return {?}\n */\ninitialize(): void {\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n    if (typeof this.objectOptions['panel'] === 'string') { // find a Node for panel\n      this.objectOptions['panel'] = document.querySelector(this.objectOptions['panel']);\n    }\n\n\n\n    this.directionsService = new google.maps.DirectionsService();\n    this.directionsRenderer = new google.maps.DirectionsRenderer(this.objectOptions);\n\n    this.directionsRenderer.setMap(this.nguiMapComponent.map);\n\n    // set google events listeners and emidirectionsRenderer to this outputs listeners\n    this.showDirections(this.directionsRequest);\n\n    this.nguiMap.setObjectEvents(this.outputs, this, 'directionsRenderer');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.directionsRenderer);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    let /** @type {?} */ newOptions = {};\n    for (let /** @type {?} */ key in changes) {\n      if (this.inputs.indexOf(key) !== -1) {\n        newOptions[key] = this.optionBuilder.googlize(changes[key].currentValue);\n      }\n    }\n    if (changes['directionsRequest'] && this.directionsRenderer) {\n      this.directionsService && this.showDirections(this.directionsRequest);\n    }\n  }\n/**\n * @param {?} directionsRequest\n * @return {?}\n */\nshowDirections(directionsRequest: google.maps.DirectionsRequest) {\n    this.directionsService.route(directionsRequest,\n      (response: any, status: any) =>  {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.directionsRenderer.setDirections(response);\n        } else {\n          console.error('Directions request failed due to ' + status);\n        }\n      }\n    );\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    super.ngOnDestroy();\n    this.nguiMap.clearObjectEvents(this.outputs, this, 'directionsRenderer');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map > directions-renderer',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n{type: NavigatorGeolocation, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'directionsRequest': [{ type: Input, args: ['directions-request', ] },],\n};\n}\n\nfunction DirectionsRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectionsRenderer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDirectionsRenderer.ctorParameters;\n/** @type {?} */\nDirectionsRenderer.propDecorators;\n/** @type {?} */\nDirectionsRenderer.prototype.directions;\n/** @type {?} */\nDirectionsRenderer.prototype.draggable;\n/** @type {?} */\nDirectionsRenderer.prototype.hideRouteList;\n/** @type {?} */\nDirectionsRenderer.prototype.infoWindow;\n/** @type {?} */\nDirectionsRenderer.prototype.panel;\n/** @type {?} */\nDirectionsRenderer.prototype.markerOptions;\n/** @type {?} */\nDirectionsRenderer.prototype.polylineOptions;\n/** @type {?} */\nDirectionsRenderer.prototype.preserveViewport;\n/** @type {?} */\nDirectionsRenderer.prototype.routeIndex;\n/** @type {?} */\nDirectionsRenderer.prototype.suppressBicyclingLayer;\n/** @type {?} */\nDirectionsRenderer.prototype.suppressInfoWindows;\n/** @type {?} */\nDirectionsRenderer.prototype.suppressMarkers;\n/** @type {?} */\nDirectionsRenderer.prototype.suppressPolylines;\n/** @type {?} */\nDirectionsRenderer.prototype.directions_changed;\n/** @type {?} */\nDirectionsRenderer.prototype.directionsRequest;\n/** @type {?} */\nDirectionsRenderer.prototype.directionsService;\n/** @type {?} */\nDirectionsRenderer.prototype.directionsRenderer;\n/** @type {?} */\nDirectionsRenderer.prototype.geolocation;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}