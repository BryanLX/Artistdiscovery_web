{"version":3,"sources":["../tmp/components/ngui-map.component.ts"],"names":[],"mappings":"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","file":"ngui-map.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  ElementRef,\n  ViewEncapsulation,\n  EventEmitter,\n  SimpleChanges,\n  Output,\n  NgZone,\n  AfterViewInit, AfterViewChecked, OnChanges, OnDestroy\n} from '@angular/core';\n\nimport { OptionBuilder } from '../services/option-builder';\nimport { NavigatorGeolocation } from '../services/navigator-geolocation';\nimport { GeoCoder } from '../services/geo-coder';\nimport { NguiMap } from '../services/ngui-map';\nimport { NgMapApiLoader } from '../services/api-loader';\nimport { InfoWindow } from './info-window';\nimport { Subject } from 'rxjs/Subject';\nimport { debounceTime } from 'rxjs/operator/debounceTime';\nimport { toCamelCase } from '../services/util';\n\nconst /** @type {?} */ INPUTS = [\n  'backgroundColor', 'center', 'disableDefaultUI', 'disableDoubleClickZoom', 'draggable', 'draggableCursor',\n  'draggingCursor', 'heading', 'keyboardShortcuts', 'mapMaker', 'mapTypeControl', 'mapTypeId', 'maxZoom', 'minZoom',\n  'noClear', 'overviewMapControl', 'panControl', 'panControlOptions', 'rotateControl', 'scaleControl', 'scrollwheel',\n  'streetView', 'styles', 'tilt', 'zoom', 'streetViewControl', 'zoomControl', 'zoomControlOptions', 'mapTypeControlOptions',\n  'overviewMapControlOptions', 'rotateControlOptions', 'scaleControlOptions', 'streetViewControlOptions', 'fullscreenControl', 'fullscreenControlOptions',\n  'options',\n  // ngui-map-specific inputs\n  'geoFallbackCenter'\n];\n\nconst /** @type {?} */ OUTPUTS = [\n  'bounds_changed', 'center_changed', 'click', 'dblclick', 'drag', 'dragend', 'dragstart', 'heading_changed', 'idle',\n  'typeid_changed', 'mousemove', 'mouseout', 'mouseover', 'projection_changed', 'resize', 'rightclick',\n  'tilesloaded', 'tile_changed', 'zoom_changed',\n  // to avoid DOM event conflicts\n  'mapClick', 'mapMouseover', 'mapMouseout', 'mapMousemove', 'mapDrag', 'mapDragend', 'mapDragstart'\n];\nexport class NguiMapComponent implements OnChanges, OnDestroy, AfterViewInit, AfterViewChecked {\npublic backgroundColor: any;\npublic center: any;\npublic disableDefaultUI: any;\npublic disableDoubleClickZoom: any;\npublic draggable: any;\npublic draggableCursor: any;\npublic draggingCursor: any;\npublic heading: any;\npublic keyboardShortcuts: any;\npublic mapMaker: any;\npublic mapTypeControl: any;\npublic mapTypeId: any;\npublic maxZoom: any;\npublic minZoom: any;\npublic noClear: any;\npublic overviewMapControl: any;\npublic panControl: any;\npublic panControlOptions: any;\npublic rotateControl: any;\npublic scaleControl: any;\npublic scrollwheel: any;\npublic streetView: any;\npublic styles: any;\npublic tilt: any;\npublic zoom: any;\npublic streetViewControl: any;\npublic zoomControl: any;\npublic zoomControlOptions: any;\npublic mapTypeControlOptions: any;\npublic overviewMapControlOptions: any;\npublic rotateControlOptions: any;\npublic scaleControlOptions: any;\npublic streetViewControlOptions: any;\npublic fullscreenControl: any;\npublic fullscreenControlOptions: any;\npublic options: any;\npublic geoFallbackCenter: any;\npublic bounds_changed: any;\npublic center_changed: any;\npublic click: any;\npublic dblclick: any;\npublic drag: any;\npublic dragend: any;\npublic dragstart: any;\npublic heading_changed: any;\npublic idle: any;\npublic typeid_changed: any;\npublic mousemove: any;\npublic mouseout: any;\npublic mouseover: any;\npublic projection_changed: any;\npublic resize: any;\npublic rightclick: any;\npublic tilesloaded: any;\npublic tile_changed: any;\npublic zoom_changed: any;\npublic mapClick: any;\npublic mapMouseover: any;\npublic mapMouseout: any;\npublic mapMousemove: any;\npublic mapDrag: any;\npublic mapDragend: any;\npublic mapDragstart: any;\npublic mapReady$: EventEmitter<any> = new EventEmitter();\npublic el: HTMLElement;\npublic map: google.maps.Map;\npublic mapOptions: google.maps.MapOptions = {};\npublic inputChanges$ = new Subject();\npublic infoWindows: { [id: string]: InfoWindow } = { };\npublic mapIdledOnce: boolean = false;\nprivate initializeMapAfterDisplayed = false;\nprivate apiLoaderSub;\n/**\n * @param {?} optionBuilder\n * @param {?} elementRef\n * @param {?} geolocation\n * @param {?} geoCoder\n * @param {?} nguiMap\n * @param {?} apiLoader\n * @param {?} zone\n */\nconstructor(\npublic optionBuilder: OptionBuilder,\npublic elementRef: ElementRef,\npublic geolocation: NavigatorGeolocation,\npublic geoCoder: GeoCoder,\npublic nguiMap: NguiMap,\npublic apiLoader: NgMapApiLoader,\npublic zone: NgZone,\n  ) {\n    apiLoader.load();\n\n    // all outputs needs to be initialized,\n    // http://stackoverflow.com/questions/37765519/angular2-directive-cannot-read-property-subscribe-of-undefined-with-outputs\n    OUTPUTS.forEach(output => this[output] = new EventEmitter());\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    this.apiLoaderSub = this.apiLoader.api$.subscribe(() => this.initializeMap());\n  }\n/**\n * @return {?}\n */\nngAfterViewChecked() {\n      if (this.initializeMapAfterDisplayed && this.el && this.el.offsetWidth > 0) {\n        this.initializeMap();\n      }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    this.inputChanges$.next(changes);\n  }\n/**\n * @return {?}\n */\ninitializeMap(): void {\n    this.el = this.elementRef.nativeElement.querySelector('.google-map');\n    if (this.el && this.el.offsetWidth === 0) {\n        this.initializeMapAfterDisplayed = true;\n        return;\n    }\n\n    this.initializeMapAfterDisplayed = false;\n    this.mapOptions = this.optionBuilder.googlizeAllInputs(INPUTS, this);\n\n\n    this.mapOptions.zoom = this.mapOptions.zoom || 15;\n    typeof this.mapOptions.center === 'string' && (delete this.mapOptions.center);\n\n    this.zone.runOutsideAngular(() => {\n      this.map = new google.maps.Map(this.el, this.mapOptions);\n      this.map['mapObjectName'] = 'NguiMapComponent';\n\n      if (!this.mapOptions.center) { // if center is not given as lat/lng\n        this.setCenter();\n      }\n\n      // set google events listeners and emits to this outputs listeners\n      this.nguiMap.setObjectEvents(OUTPUTS, this, 'map');\n\n      this.map.addListener('idle', () => {\n        if (!this.mapIdledOnce) {\n          this.mapIdledOnce = true;\n          setTimeout(() => { // Why????, subsribe and emit must not be in the same cycle???\n            this.mapReady$.emit(this.map);\n          });\n        }\n      });\n\n      // update map when input changes\n      debounceTime.call(this.inputChanges$, 1000)\n        .subscribe((changes: SimpleChanges) => this.nguiMap.updateGoogleObject(this.map, changes));\n\n      if (typeof window !== 'undefined' && ( /** @type {?} */((<any>window)))['nguiMapRef']) {\n        // expose map object for test and debugging on (<any>window)\n        ( /** @type {?} */((<any>window)))['nguiMapRef'].map = this.map;\n      }\n    });\n  }\n/**\n * @return {?}\n */\nsetCenter(): void {\n    if (!this['center']) { // center is not from user. Thus, we set the current location\n      this.geolocation.getCurrentPosition().subscribe(\n        position => {\n\n          let /** @type {?} */ latLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n          this.map.setCenter(latLng);\n        },\n        error => {\n          console.error('ngui-map: Error finding the current position');\n          this.map.setCenter(this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }\n      );\n    }\n    else if (typeof this['center'] === 'string') {\n      this.geoCoder.geocode({address: this['center']}).subscribe(\n        results => {\n\n          this.map.setCenter(results[0].geometry.location);\n        },\n        error => {\n          this.map.setCenter(this.mapOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        });\n    }\n  }\n/**\n * @param {?} id\n * @param {?} anchor\n * @return {?}\n */\nopenInfoWindow(id: string, anchor: google.maps.MVCObject) {\n    this.infoWindows[id].open(anchor);\n  }\n/**\n * @param {?} id\n * @return {?}\n */\ncloseInfoWindow(id: string) {\n    // if infoWindow for id exists, close the infoWindow\n    if (this.infoWindows[id])\n      this.infoWindows[id].close();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.inputChanges$.complete();\n    if (this.el && !this.initializeMapAfterDisplayed) {\n      this.nguiMap.clearObjectEvents(OUTPUTS, this, 'map');\n    }\n    if (this.apiLoaderSub) {\n      this.apiLoaderSub.unsubscribe();\n    }\n  }\n/**\n * @param {?} mapObjectName\n * @param {?} mapObject\n * @return {?}\n */\naddToMapObjectGroup(mapObjectName: string, mapObject: any) {\n    let /** @type {?} */ groupName = toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n    this.map[groupName] = this.map[groupName] || [];\n    this.map[groupName].push(mapObject);\n  }\n/**\n * @param {?} mapObjectName\n * @param {?} mapObject\n * @return {?}\n */\nremoveFromMapObjectGroup(mapObjectName: string, mapObject: any) {\n    let /** @type {?} */ groupName = toCamelCase(mapObjectName.toLowerCase()) + 's'; // e.g. markers\n    if (this.map && this.map[groupName]) {\n      let /** @type {?} */ index = this.map[groupName].indexOf(mapObject);\n\n      (index > -1) && this.map[groupName].splice(index, 1);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngui-map',\n  providers: [NguiMap, OptionBuilder, GeoCoder, NavigatorGeolocation],\n  styles: [`\n    ngui-map {display: block; height: 300px;}\n    .google-map {width: 100%; height: 100%}\n  `],\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"google-map\"></div>\n    <ng-content></ng-content>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OptionBuilder, },\n{type: ElementRef, },\n{type: NavigatorGeolocation, },\n{type: GeoCoder, },\n{type: NguiMap, },\n{type: NgMapApiLoader, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'mapReady$': [{ type: Output },],\n};\n}\n\nfunction NguiMapComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNguiMapComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNguiMapComponent.ctorParameters;\n/** @type {?} */\nNguiMapComponent.propDecorators;\n/** @type {?} */\nNguiMapComponent.prototype.backgroundColor;\n/** @type {?} */\nNguiMapComponent.prototype.center;\n/** @type {?} */\nNguiMapComponent.prototype.disableDefaultUI;\n/** @type {?} */\nNguiMapComponent.prototype.disableDoubleClickZoom;\n/** @type {?} */\nNguiMapComponent.prototype.draggable;\n/** @type {?} */\nNguiMapComponent.prototype.draggableCursor;\n/** @type {?} */\nNguiMapComponent.prototype.draggingCursor;\n/** @type {?} */\nNguiMapComponent.prototype.heading;\n/** @type {?} */\nNguiMapComponent.prototype.keyboardShortcuts;\n/** @type {?} */\nNguiMapComponent.prototype.mapMaker;\n/** @type {?} */\nNguiMapComponent.prototype.mapTypeControl;\n/** @type {?} */\nNguiMapComponent.prototype.mapTypeId;\n/** @type {?} */\nNguiMapComponent.prototype.maxZoom;\n/** @type {?} */\nNguiMapComponent.prototype.minZoom;\n/** @type {?} */\nNguiMapComponent.prototype.noClear;\n/** @type {?} */\nNguiMapComponent.prototype.overviewMapControl;\n/** @type {?} */\nNguiMapComponent.prototype.panControl;\n/** @type {?} */\nNguiMapComponent.prototype.panControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.rotateControl;\n/** @type {?} */\nNguiMapComponent.prototype.scaleControl;\n/** @type {?} */\nNguiMapComponent.prototype.scrollwheel;\n/** @type {?} */\nNguiMapComponent.prototype.streetView;\n/** @type {?} */\nNguiMapComponent.prototype.styles;\n/** @type {?} */\nNguiMapComponent.prototype.tilt;\n/** @type {?} */\nNguiMapComponent.prototype.zoom;\n/** @type {?} */\nNguiMapComponent.prototype.streetViewControl;\n/** @type {?} */\nNguiMapComponent.prototype.zoomControl;\n/** @type {?} */\nNguiMapComponent.prototype.zoomControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.mapTypeControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.overviewMapControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.rotateControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.scaleControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.streetViewControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.fullscreenControl;\n/** @type {?} */\nNguiMapComponent.prototype.fullscreenControlOptions;\n/** @type {?} */\nNguiMapComponent.prototype.options;\n/** @type {?} */\nNguiMapComponent.prototype.geoFallbackCenter;\n/** @type {?} */\nNguiMapComponent.prototype.bounds_changed;\n/** @type {?} */\nNguiMapComponent.prototype.center_changed;\n/** @type {?} */\nNguiMapComponent.prototype.click;\n/** @type {?} */\nNguiMapComponent.prototype.dblclick;\n/** @type {?} */\nNguiMapComponent.prototype.drag;\n/** @type {?} */\nNguiMapComponent.prototype.dragend;\n/** @type {?} */\nNguiMapComponent.prototype.dragstart;\n/** @type {?} */\nNguiMapComponent.prototype.heading_changed;\n/** @type {?} */\nNguiMapComponent.prototype.idle;\n/** @type {?} */\nNguiMapComponent.prototype.typeid_changed;\n/** @type {?} */\nNguiMapComponent.prototype.mousemove;\n/** @type {?} */\nNguiMapComponent.prototype.mouseout;\n/** @type {?} */\nNguiMapComponent.prototype.mouseover;\n/** @type {?} */\nNguiMapComponent.prototype.projection_changed;\n/** @type {?} */\nNguiMapComponent.prototype.resize;\n/** @type {?} */\nNguiMapComponent.prototype.rightclick;\n/** @type {?} */\nNguiMapComponent.prototype.tilesloaded;\n/** @type {?} */\nNguiMapComponent.prototype.tile_changed;\n/** @type {?} */\nNguiMapComponent.prototype.zoom_changed;\n/** @type {?} */\nNguiMapComponent.prototype.mapClick;\n/** @type {?} */\nNguiMapComponent.prototype.mapMouseover;\n/** @type {?} */\nNguiMapComponent.prototype.mapMouseout;\n/** @type {?} */\nNguiMapComponent.prototype.mapMousemove;\n/** @type {?} */\nNguiMapComponent.prototype.mapDrag;\n/** @type {?} */\nNguiMapComponent.prototype.mapDragend;\n/** @type {?} */\nNguiMapComponent.prototype.mapDragstart;\n/** @type {?} */\nNguiMapComponent.prototype.mapReady$;\n/** @type {?} */\nNguiMapComponent.prototype.el;\n/** @type {?} */\nNguiMapComponent.prototype.map;\n/** @type {?} */\nNguiMapComponent.prototype.mapOptions;\n/** @type {?} */\nNguiMapComponent.prototype.inputChanges$;\n/** @type {?} */\nNguiMapComponent.prototype.infoWindows;\n/** @type {?} */\nNguiMapComponent.prototype.mapIdledOnce;\n/** @type {?} */\nNguiMapComponent.prototype.initializeMapAfterDisplayed;\n/** @type {?} */\nNguiMapComponent.prototype.apiLoaderSub;\n/** @type {?} */\nNguiMapComponent.prototype.optionBuilder;\n/** @type {?} */\nNguiMapComponent.prototype.elementRef;\n/** @type {?} */\nNguiMapComponent.prototype.geolocation;\n/** @type {?} */\nNguiMapComponent.prototype.geoCoder;\n/** @type {?} */\nNguiMapComponent.prototype.nguiMap;\n/** @type {?} */\nNguiMapComponent.prototype.apiLoader;\n/** @type {?} */\nNguiMapComponent.prototype.zone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}