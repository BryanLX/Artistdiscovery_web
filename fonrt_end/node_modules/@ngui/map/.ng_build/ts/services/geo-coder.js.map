{"version":3,"sources":["../tmp/services/geo-coder.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAsB,MAAA,eAAA,CAAA;AAC/B,OAAO,EAAE,UAAA,EAAW,MAAA,iBAAA,CAAA;AAEpB,OAAO,EAAE,cAAA,EAAe,MAAA,cAAA,CAAA;AACxB;;;GAGG;AACH,MAGC;IADD;;OAEG;IACH,YAAsB,SAAW;QAAX,cAAA,GAAA,SAAA,CAAW;QADvB,kBAAA,GAAgB,EAAA,CAAG;IACmB,CAAA;IAChD;;;OAGG;IACH,OAHG,CAAA,OAAA;QAIC,MAAM,CAHC,IAAI,UAAA,CAAW,CAAC,gBAA+B,EAAE,EAAA;YAIpD,IAAI,CAHC,aAAC,CAAa,IAAC,CAAI,IAAC,CAAI,SAAC,CAAS,IAAC;iBAIrC,SAHC,CAAS,GAAG,EAAA,CAAG,IAAA,CAAK,cAAC,CAAc,OAAC,EAAQ,gBAAA,CAAiB,CAAC,CAAC,CAAC;QAIxE,CAAC,CAHC,CAAC;IAIL,CAAC;IACH;;OAEG;IACH,WALG;QAMC,IAAI,CALC,aAAC,CAAa,GAAC,CAAG,GAAC,CAAG,EAAA,CAAG,GAAA,CAAI,WAAC,EAAW,CAAE,CAAC;IAMnD,CAAC;IACH;;;;OAIG;IARA,cAAA,CAAA,OAAA,EAAA,QAAA;QAUC,MAAM,gBAAgB,CAThB,QAAA,GAAW,IAAI,MAAA,CAAO,IAAC,CAAI,QAAC,EAAQ,CAAE;QAU5C,QAAQ,CATC,OAAC,CAAO,OAAC,EAAQ,UAAA,OAAW,EAAQ,MAAA;YAU3C,EAAE,CAAC,CAAC,MATC,KAAU,MAAA,CAAO,IAAC,CAAI,cAAC,CAAc,EAAC,CAAE,CAAC,CAAA;gBAU5C,QAAQ,CATC,IAAC,CAAI,OAAC,CAAO,CAAC;gBAUvB,QAAQ,CATC,QAAC,EAAQ,CAAE;YAUtB,CAAC;YATC,IAAA,CAAK,CAAA;gBAUL,QAAQ,CATC,KAAC,CAAK,OAAC,CAAO,CAAC;YAU1B,CAAC;QANL,CAAA,CAFI,CAAC;IAUL,CAAC;;AARI,mBAAA,GAAoC;IAU3C,EATE,IAAA,EAAM,UAAA,EAAW;CAUlB,CATC;AAUF;;GAEG;AAVF,uBAAA,GAAA,GAAA,EAAA,CAAA;IAYD,EAAC,IAAI,EAAE,cAAc,GAAG;CACvB,CAAC;AAGF;IACA,gBAAgB;IAChB,QAAQ,CAAC,UAAU,CAAC;IACpB;;;OAGG;IACH,QAAQ,CAAC,cAAc,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC;IACjC,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC;AAC7B,CAAC","file":"geo-coder.js","sourceRoot":"","sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { NgMapApiLoader } from './api-loader';\n/**\n *   Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)\n *   service for Google Geocoder service\n */\nexport class GeoCoder implements OnDestroy {\nprivate apiLoaderSubs = [];\n/**\n * @param {?} apiLoader\n */\nconstructor(private apiLoader: NgMapApiLoader) {}\n/**\n * @param {?} options\n * @return {?}\n */\ngeocode(options: google.maps.GeocoderRequest) {\n    return new Observable((responseObserver: Observer<any>) => {\n        this.apiLoaderSubs.push(this.apiLoader.api$\n          .subscribe(() => this.requestGeocode(options, responseObserver)));\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.apiLoaderSubs.map(sub => sub.unsubscribe());\n  }\n/**\n * @param {?} options\n * @param {?} observer\n * @return {?}\n */\nprivate requestGeocode(options, observer) {\n    const /** @type {?} */ geocoder = new google.maps.Geocoder();\n    geocoder.geocode(options, function (results, status) {\n      if (status === google.maps.GeocoderStatus.OK) {\n        observer.next(results);\n        observer.complete();\n      } else {\n        observer.error(results);\n      }\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgMapApiLoader, },\n];\n}\n\nfunction GeoCoder_tsickle_Closure_declarations() {\n/** @type {?} */\nGeoCoder.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGeoCoder.ctorParameters;\n/** @type {?} */\nGeoCoder.prototype.apiLoaderSubs;\n/** @type {?} */\nGeoCoder.prototype.apiLoader;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}