{"version":3,"sources":["../tmp/components/info-window.ts"],"names":[],"mappings":"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","file":"info-window.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  SimpleChanges,\n  ViewChild, ViewContainerRef,\n  Output, OnInit, OnChanges, OnDestroy\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { debounceTime } from 'rxjs/operator/debounceTime';\nimport { NguiMap } from '../services/ngui-map';\nimport { NguiMapComponent } from './ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [\n  'content', 'disableAutoPan', 'maxWidth', 'pixelOffset', 'position', 'zIndex', 'options'\n];\nconst /** @type {?} */ OUTPUTS = [\n  'closeclick', 'content_changed', 'domready', 'position_changed', 'zindex_changed'\n];\nexport class InfoWindow implements OnInit, OnChanges, OnDestroy {\npublic content: any;\npublic disableAutoPan: any;\npublic maxWidth: any;\npublic pixelOffset: any;\npublic position: any;\npublic zIndex: any;\npublic options: any;\npublic closeclick: any;\npublic content_changed: any;\npublic domready: any;\npublic position_changed: any;\npublic zindex_changed: any; // generated by ngc-pre-compiler.js\n\n   initialized$: EventEmitter<any> = new EventEmitter();\npublic infoWindow: google.maps.InfoWindow;\npublic objectOptions: google.maps.InfoWindowOptions = {};\npublic inputChanges$ = new Subject();\n   template: ViewContainerRef;\n/**\n * @param {?} elementRef\n * @param {?} nguiMap\n * @param {?} nguiMapComponent\n */\nconstructor(\nprivate elementRef: ElementRef,\nprivate nguiMap: NguiMap,\nprivate nguiMapComponent: NguiMapComponent,\n  ) {\n    this.elementRef.nativeElement.style.display = 'none';\n    OUTPUTS.forEach(output => this[output] = new EventEmitter());\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\n      this.initialize();\n    } else {\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    this.inputChanges$.next(changes);\n  }\n/**\n * @return {?}\n */\ninitialize(): void {\n\n\n    this.objectOptions = this.nguiMapComponent.optionBuilder.googlizeAllInputs(INPUTS, this);\n    this.infoWindow = new google.maps.InfoWindow(this.objectOptions);\n    this.infoWindow['mapObjectName'] = 'InfoWindow';\n\n\n    // register infoWindow ids to NguiMap, so that it can be opened by id\n    if (this.elementRef.nativeElement.id) {\n      this.nguiMapComponent.infoWindows[this.elementRef.nativeElement.id] = this;\n    } else {\n      console.error('An InfoWindow must have an id. e.g. id=\"detail\"');\n    }\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(OUTPUTS, this, 'infoWindow');\n\n    // update object when input changes\n    debounceTime.call(this.inputChanges$, 1000)\n      .subscribe((changes: SimpleChanges) => this.nguiMap.updateGoogleObject(this.infoWindow, changes));\n\n    this.nguiMapComponent.addToMapObjectGroup('InfoWindow', this.infoWindow);\n    this.initialized$.emit(this.infoWindow);\n  }\n/**\n * @param {?} anchor\n * @return {?}\n */\nopen(anchor: google.maps.MVCObject) {\n    // set content and open it\n    this.infoWindow.setContent(this.template.element.nativeElement);\n    this.infoWindow.open(this.nguiMapComponent.map, anchor);\n  }\n/**\n * @return {?}\n */\nclose() {\n    // check if infoWindow exists, and closes it\n    if (this.infoWindow)\n      this.infoWindow.close();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.inputChanges$.complete();\n    if (this.infoWindow) {\n      this.nguiMap.clearObjectEvents(OUTPUTS, this, 'infoWindow');\n      delete this.infoWindow;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngui-map > info-window',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n  template: `<div #template><ng-content></ng-content></div>`,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NguiMap, },\n{type: NguiMapComponent, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'initialized$': [{ type: Output },],\n'template': [{ type: ViewChild, args: ['template', {read: ViewContainerRef}, ] },],\n};\n}\n\nfunction InfoWindow_tsickle_Closure_declarations() {\n/** @type {?} */\nInfoWindow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfoWindow.ctorParameters;\n/** @type {?} */\nInfoWindow.propDecorators;\n/** @type {?} */\nInfoWindow.prototype.content;\n/** @type {?} */\nInfoWindow.prototype.disableAutoPan;\n/** @type {?} */\nInfoWindow.prototype.maxWidth;\n/** @type {?} */\nInfoWindow.prototype.pixelOffset;\n/** @type {?} */\nInfoWindow.prototype.position;\n/** @type {?} */\nInfoWindow.prototype.zIndex;\n/** @type {?} */\nInfoWindow.prototype.options;\n/** @type {?} */\nInfoWindow.prototype.closeclick;\n/** @type {?} */\nInfoWindow.prototype.content_changed;\n/** @type {?} */\nInfoWindow.prototype.domready;\n/** @type {?} */\nInfoWindow.prototype.position_changed;\n/** @type {?} */\nInfoWindow.prototype.zindex_changed;\n/** @type {?} */\nInfoWindow.prototype.initialized$;\n/** @type {?} */\nInfoWindow.prototype.infoWindow;\n/** @type {?} */\nInfoWindow.prototype.objectOptions;\n/** @type {?} */\nInfoWindow.prototype.inputChanges$;\n/** @type {?} */\nInfoWindow.prototype.template;\n/** @type {?} */\nInfoWindow.prototype.elementRef;\n/** @type {?} */\nInfoWindow.prototype.nguiMap;\n/** @type {?} */\nInfoWindow.prototype.nguiMapComponent;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}