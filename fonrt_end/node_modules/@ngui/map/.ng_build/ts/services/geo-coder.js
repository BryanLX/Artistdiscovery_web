import { Injectable } from '@angular/core';
import { Observable } from 'rxjs/Observable';
import { NgMapApiLoader } from './api-loader';
/**
 *   Provides [defered/promise API](https://docs.angularjs.org/api/ng/service/$q)
 *   service for Google Geocoder service
 */
export class GeoCoder {
    /**
     * @param {?} apiLoader
     */
    constructor(apiLoader) {
        this.apiLoader = apiLoader;
        this.apiLoaderSubs = [];
    }
    /**
     * @param {?} options
     * @return {?}
     */
    geocode(options) {
        return new Observable((responseObserver) => {
            this.apiLoaderSubs.push(this.apiLoader.api$
                .subscribe(() => this.requestGeocode(options, responseObserver)));
        });
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.apiLoaderSubs.map(sub => sub.unsubscribe());
    }
    /**
     * @param {?} options
     * @param {?} observer
     * @return {?}
     */
    requestGeocode(options, observer) {
        const /** @type {?} */ geocoder = new google.maps.Geocoder();
        geocoder.geocode(options, function (results, status) {
            if (status === google.maps.GeocoderStatus.OK) {
                observer.next(results);
                observer.complete();
            }
            else {
                observer.error(results);
            }
        });
    }
}
GeoCoder.decorators = [
    { type: Injectable },
];
/**
 * @nocollapse
 */
GeoCoder.ctorParameters = () => [
    { type: NgMapApiLoader, },
];
function GeoCoder_tsickle_Closure_declarations() {
    /** @type {?} */
    GeoCoder.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    GeoCoder.ctorParameters;
    /** @type {?} */
    GeoCoder.prototype.apiLoaderSubs;
    /** @type {?} */
    GeoCoder.prototype.apiLoader;
}
//# sourceMappingURL=geo-coder.js.map