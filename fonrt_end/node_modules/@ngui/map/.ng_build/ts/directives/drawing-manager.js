import { Directive } from '@angular/core';
import { BaseMapDirective } from './base-map-directive';
import { NguiMapComponent } from '../components/ngui-map.component';
const /** @type {?} */ INPUTS = [
    'options',
    'circleOptions', 'drawingControl', 'drawingControlOptions', 'drawingMode',
    'map', 'markerOptions', 'polygonOptions', 'polylineOptions', 'rectangleOptions'
];
const /** @type {?} */ OUTPUTS = [
    'circlecomplete', 'markercomplete', 'overlaycomplete',
    'polygoncomplete', 'polylinecomplete', 'rectanglecomplete'
];
export class DrawingManager extends BaseMapDirective {
    /**
     * @param {?} nguiMapComp
     */
    constructor(nguiMapComp) {
        super(nguiMapComp, 'DrawingManager', INPUTS, OUTPUTS);
        this.libraryName = 'drawing';
    }
}
DrawingManager.decorators = [
    { type: Directive, args: [{
                selector: 'ngui-map > drawing-manager',
                inputs: INPUTS,
                outputs: OUTPUTS,
            },] },
];
/**
 * @nocollapse
 */
DrawingManager.ctorParameters = () => [
    { type: NguiMapComponent, },
];
function DrawingManager_tsickle_Closure_declarations() {
    /** @type {?} */
    DrawingManager.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    DrawingManager.ctorParameters;
    /** @type {?} */
    DrawingManager.prototype.options;
    /** @type {?} */
    DrawingManager.prototype.circleOptions;
    /** @type {?} */
    DrawingManager.prototype.drawingControl;
    /** @type {?} */
    DrawingManager.prototype.drawingControlOptions;
    /** @type {?} */
    DrawingManager.prototype.drawingMode;
    /** @type {?} */
    DrawingManager.prototype.map;
    /** @type {?} */
    DrawingManager.prototype.markerOptions;
    /** @type {?} */
    DrawingManager.prototype.polygonOptions;
    /** @type {?} */
    DrawingManager.prototype.polylineOptions;
    /** @type {?} */
    DrawingManager.prototype.rectangleOptions;
    /** @type {?} */
    DrawingManager.prototype.circlecomplete;
    /** @type {?} */
    DrawingManager.prototype.markercomplete;
    /** @type {?} */
    DrawingManager.prototype.overlaycomplete;
    /** @type {?} */
    DrawingManager.prototype.polygoncomplete;
    /** @type {?} */
    DrawingManager.prototype.polylinecomplete;
    /** @type {?} */
    DrawingManager.prototype.rectanglecomplete;
}
//# sourceMappingURL=drawing-manager.js.map