import { Directive } from '@angular/core';
import { BaseMapDirective } from './base-map-directive';
import { NguiMapComponent } from '../components/ngui-map.component';
const /** @type {?} */ INPUTS = ['controlPosition', 'controls', 'drawingMode', 'featureFactory', 'style', 'geoJson', 'geoJsonUrl'];
const /** @type {?} */ OUTPUTS = [
    'addfeature', 'click', 'dblclick', 'mousedown', 'mouseout', 'mouseover',
    'mouseup', 'removefeature', 'removeproperty', 'rightclick', 'setgeometry', 'setproperty'
];
export class DataLayer extends BaseMapDirective {
    /**
     * @param {?} nguiMapComponent
     */
    constructor(nguiMapComponent) {
        super(nguiMapComponent, 'Data', INPUTS, OUTPUTS);
    }
    /**
     * @return {?}
     */
    initialize() {
        if (this['geoJson']) {
            // addGeoJson from an object
            this.nguiMapComponent.map.data.addGeoJson(this['geoJson']);
        }
        else if (this['geoJsonUrl']) {
            // loadGeoJson from a URL
            this.nguiMapComponent.map.data.loadGeoJson(this['geoJsonUrl']);
        }
        else {
            this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);
            this.nguiMapComponent.map.data.add(this.objectOptions);
        }
        // unlike others, data belongs to map. e.g., map.data.loadGeoJson(), map.data.add()
        this.mapObject = this.nguiMapComponent.map.data;
        // set google events listeners and emits to this outputs listeners
        this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');
        this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);
        this.initialized$.emit(this.mapObject);
    }
}
DataLayer.decorators = [
    { type: Directive, args: [{
                selector: 'ngui-map > data-layer',
                inputs: INPUTS,
                outputs: OUTPUTS,
            },] },
];
/**
 * @nocollapse
 */
DataLayer.ctorParameters = () => [
    { type: NguiMapComponent, },
];
function DataLayer_tsickle_Closure_declarations() {
    /** @type {?} */
    DataLayer.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    DataLayer.ctorParameters;
    /** @type {?} */
    DataLayer.prototype.controlPosition;
    /** @type {?} */
    DataLayer.prototype.controls;
    /** @type {?} */
    DataLayer.prototype.drawingMode;
    /** @type {?} */
    DataLayer.prototype.featureFactory;
    /** @type {?} */
    DataLayer.prototype.style;
    /** @type {?} */
    DataLayer.prototype.geoJson;
    /** @type {?} */
    DataLayer.prototype.geoJsonUrl;
    /** @type {?} */
    DataLayer.prototype.addfeature;
    /** @type {?} */
    DataLayer.prototype.click;
    /** @type {?} */
    DataLayer.prototype.dblclick;
    /** @type {?} */
    DataLayer.prototype.mousedown;
    /** @type {?} */
    DataLayer.prototype.mouseout;
    /** @type {?} */
    DataLayer.prototype.mouseover;
    /** @type {?} */
    DataLayer.prototype.mouseup;
    /** @type {?} */
    DataLayer.prototype.removefeature;
    /** @type {?} */
    DataLayer.prototype.removeproperty;
    /** @type {?} */
    DataLayer.prototype.rightclick;
    /** @type {?} */
    DataLayer.prototype.setgeometry;
    /** @type {?} */
    DataLayer.prototype.setproperty;
}
//# sourceMappingURL=data-layer.js.map