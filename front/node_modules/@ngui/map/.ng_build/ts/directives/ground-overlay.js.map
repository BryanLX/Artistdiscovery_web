{"version":3,"sources":["../tmp/directives/ground-overlay.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAU,MAAA,eAAA,CAAA;AAEnB,OAAO,EAAE,gBAAA,EAAiB,MAAA,sBAAA,CAAA;AAC1B,OAAO,EAAE,gBAAA,EAAiB,MAAA,kCAAA,CAAA;AAE1B,MAAM,gBAAW,CAAX,MAAA,GAAS,CAAE,KAAA,EAAO,QAAA,EAAU,WAAA,EAAa,SAAA,CAAU,CAAE;AAC3D,MAAM,gBAAY,CAAZ,OAAA,GAAU,CAAE,OAAA,EAAS,UAAA,CAAW,CAAE;AACxC,MAEC,oBAAA,SAAA,gBAAA;IAOD;;OAEG;IACH,YAIG,WAAwB;QAHvB,KAAK,CAAC,WAAW,EAAE,eAAe,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAChD,kBAAA,GAAgD,CAAoC,EAAC,CAAA,CAAE;IAA9F,CAAC;IACH;;OAEG;IACH,UAGG;QAFC,mDAAmD;QACnD,IAAI,CAGC,aAAC,GAAe,IAAA,CAAK,aAAC,CAAa,iBAAC,CAAiB,CAAC,WAAC,EAAY,SAAA,CAAU,EAAE,IAAA,CAAK,CAAC;QAA1F,4CAA4C;QAC5C,IAAI,CAGC,SAAC,GAAW,IAAI,MAAA,CAAO,IAAC,CAAI,aAAC,CAAa,IAAC,CAAI,KAAC,CAAK,EAAE,IAAA,CAAK,QAAC,CAAQ,EAAE,IAAA,CAAK,aAAC,CAAa,CAAC;QAFhG,IAAI,CAGC,SAAC,CAAS,MAAC,CAAM,IAAC,CAAI,gBAAC,CAAgB,GAAC,CAAG,CAAC;QAFjD,IAAI,CAGC,SAAC,CAAS,eAAC,CAAe,GAAG,IAAA,CAAK,aAAC,CAAa;QADrD,kEAAkE;QAClE,IAAI,CAGC,OAAC,CAAO,eAAC,CAAe,IAAC,CAAI,OAAC,EAAQ,IAAA,EAAM,WAAA,CAAY,CAAC;QAD9D,IAAI,CAGC,gBAAC,CAAgB,mBAAC,CAAmB,IAAC,CAAI,aAAC,EAAc,IAAA,CAAK,SAAC,CAAS,CAAC;QAF9E,IAAI,CAGC,YAAC,CAAY,IAAC,CAAI,IAAC,CAAI,SAAC,CAAS,CAAC;IAFzC,CAAC;;AAII,wBAAA,GAAoC;IAF3C,EAGE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAFvB,QAAQ,EAGE,2BAAA;gBAFV,MAAM,EAGE,MAAA;gBAFR,OAAO,EAGE,OAAA;aAFV,EAGC,EAAG;CAFJ,CAGC;AAFF;;GAEG;AAEF,4BAAA,GAAA,GAAA,EAAA,CAAA;IAAD,EAAC,IAAI,EAAE,gBAAgB,GAAG;CACzB,CAAC;AAGF;IACA,gBAAgB;IAChB,aAAa,CAAC,UAAU,CAAC;IACzB;;;OAGG;IACH,aAAa,CAAC,cAAc,CAAC;IAC7B,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC;IAC5B,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC;IAC/B,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC;IAClC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC;IAChC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC;IAC9B,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC;IACjC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC;IAClC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,aAAa,CAAC;AACtC,CAAC","file":"ground-overlay.js","sourceRoot":"","sourcesContent":["import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [ 'url', 'bounds', 'clickable', 'opacity' ];\nconst /** @type {?} */ OUTPUTS = [ 'click', 'dblclick' ];\nexport class GroundOverlay extends BaseMapDirective {\npublic url: any;\npublic bounds: any;\npublic clickable: any;\npublic opacity: any;\npublic click: any;\npublic dblclick: any;\npublic mapObject: google.maps.GroundOverlay;\npublic objectOptions: google.maps.GroundOverlayOptions = /** @type {?} */(( <google.maps.GroundOverlayOptions>{}));\n/**\n * @param {?} nguiMapComp\n */\nconstructor(nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'GroundOverlay', INPUTS, OUTPUTS);\n  }\n/**\n * @return {?}\n */\ninitialize(): void {\n    // url, bounds are not the options of GroundOverlay\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(['clickable', 'opacity'], this);\n\n\n    // noinspection TypeScriptUnresolvedFunction\n    this.mapObject = new google.maps.GroundOverlay(this['url'], this['bounds'], this.objectOptions);\n    this.mapObject.setMap(this.nguiMapComponent.map);\n    this.mapObject['mapObjectName'] = this.mapObjectName;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map > ground-overlay',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction GroundOverlay_tsickle_Closure_declarations() {\n/** @type {?} */\nGroundOverlay.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGroundOverlay.ctorParameters;\n/** @type {?} */\nGroundOverlay.prototype.url;\n/** @type {?} */\nGroundOverlay.prototype.bounds;\n/** @type {?} */\nGroundOverlay.prototype.clickable;\n/** @type {?} */\nGroundOverlay.prototype.opacity;\n/** @type {?} */\nGroundOverlay.prototype.click;\n/** @type {?} */\nGroundOverlay.prototype.dblclick;\n/** @type {?} */\nGroundOverlay.prototype.mapObject;\n/** @type {?} */\nGroundOverlay.prototype.objectOptions;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}