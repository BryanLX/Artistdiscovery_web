import { Injectable, Inject, Optional, NgZone } from '@angular/core';
import { ReplaySubject } from 'rxjs/ReplaySubject';
import { NG_MAP_CONFIG_TOKEN } from './config';
import { isMapsApiLoaded } from './util';
import { first } from 'rxjs/operator/first';
/**
 * @abstract
 */
export class NgMapApiLoader {
    /**
     * @param {?} config
     */
    constructor(config) {
        this.config = config;
        this.api$ = first.call(new ReplaySubject(1));
        this.config = this.config || { apiUrl: 'https://maps.google.com/maps/api/js' };
    }
    /**
     * @abstract
     * @return {?}
     */
    load() { }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.api$.complete();
    }
}
function NgMapApiLoader_tsickle_Closure_declarations() {
    /** @type {?} */
    NgMapApiLoader.prototype.api$;
    /** @type {?} */
    NgMapApiLoader.prototype.config;
}
export class NgMapAsyncCallbackApiLoader extends NgMapApiLoader {
    /**
     * @param {?} zone
     * @param {?} config
     */
    constructor(zone, config) {
        super(config);
        this.zone = zone;
    }
    /**
     * @return {?}
     */
    load() {
        if (typeof window === 'undefined') {
            return;
        }
        if (isMapsApiLoaded()) {
            this.api$.next(google.maps);
        }
        else if (!document.querySelector('#ngui-map-api')) {
            ((window))['nguiMapRef'] = ((window))['nguiMapRef'] || [];
            ((window))['nguiMapRef'].push({ zone: this.zone, componentFn: () => this.api$.next(google.maps) });
            this.addGoogleMapsApi();
        }
    }
    /**
     * @return {?}
     */
    addGoogleMapsApi() {
        ((window))['initNguiMap'] = ((window))['initNguiMap'] || function () {
            ((window))['nguiMapRef'].forEach(nguiMapRef => {
                nguiMapRef.zone.run(function () { nguiMapRef.componentFn(); });
            });
            ((window))['nguiMapRef'].splice(0, ((window))['nguiMapRef'].length);
        };
        let /** @type {?} */ script = document.createElement('script');
        script.id = 'ngui-map-api';
        // script.src = "https://maps.google.com/maps/api/js?callback=initNguiMap";
        let /** @type {?} */ apiUrl = this.config.apiUrl;
        apiUrl += apiUrl.indexOf('?') !== -1 ? '&' : '?';
        script.src = apiUrl + 'callback=initNguiMap';
        document.querySelector('body').appendChild(script);
    }
}
NgMapAsyncCallbackApiLoader.decorators = [
    { type: Injectable },
];
/**
 * @nocollapse
 */
NgMapAsyncCallbackApiLoader.ctorParameters = () => [
    { type: NgZone, },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MAP_CONFIG_TOKEN,] },] },
];
function NgMapAsyncCallbackApiLoader_tsickle_Closure_declarations() {
    /** @type {?} */
    NgMapAsyncCallbackApiLoader.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    NgMapAsyncCallbackApiLoader.ctorParameters;
    /** @type {?} */
    NgMapAsyncCallbackApiLoader.prototype.zone;
}
export class NgMapAsyncApiLoader extends NgMapApiLoader {
    /**
     * @param {?} config
     */
    constructor(config) {
        super(config);
    }
    /**
     * @return {?}
     */
    load() {
        if (typeof window === 'undefined') {
            return;
        }
        if (isMapsApiLoaded()) {
            this.api$.next(google.maps);
        }
        else if (!document.querySelector('#ngui-map-api')) {
            let /** @type {?} */ script = document.createElement('script');
            script.id = 'ngui-map-api';
            script.async = true;
            script.onload = () => this.api$.next(google.maps);
            script.src = this.config.apiUrl;
            document.querySelector('body').appendChild(script);
        }
    }
}
NgMapAsyncApiLoader.decorators = [
    { type: Injectable },
];
/**
 * @nocollapse
 */
NgMapAsyncApiLoader.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MAP_CONFIG_TOKEN,] },] },
];
function NgMapAsyncApiLoader_tsickle_Closure_declarations() {
    /** @type {?} */
    NgMapAsyncApiLoader.decorators;
    /**
     * @nocollapse
     * @type {?}
     */
    NgMapAsyncApiLoader.ctorParameters;
}
//# sourceMappingURL=api-loader.js.map