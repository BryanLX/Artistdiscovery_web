{"version":3,"sources":["../tmp/directives/circle.ts"],"names":[],"mappings":"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","file":"circle.js","sourceRoot":"","sourcesContent":["import { Directive } from '@angular/core';\n\nimport { BaseMapDirective } from './base-map-directive';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n\nconst /** @type {?} */ INPUTS = [\n  'center', 'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'map', 'radius',\n  'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'options',\n  // ngui-map specific inputs\n  'geoFallbackCenter'\n];\nconst /** @type {?} */ OUTPUTS = [\n  'centerChanged', 'click', 'dblclick', 'drag', 'dragend', 'dragstart',\n  'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'radiusChanged', 'rightclick',\n];\nexport class Circle extends BaseMapDirective {\npublic center: any;\npublic clickable: any;\npublic draggable: any;\npublic editable: any;\npublic fillColor: any;\npublic fillOpacity: any;\npublic map: any;\npublic radius: any;\npublic strokeColor: any;\npublic strokeOpacity: any;\npublic strokePosition: any;\npublic strokeWeight: any;\npublic visible: any;\npublic zIndex: any;\npublic options: any;\npublic geoFallbackCenter: any;\npublic centerChanged: any;\npublic click: any;\npublic dblclick: any;\npublic drag: any;\npublic dragend: any;\npublic dragstart: any;\npublic mousedown: any;\npublic mousemove: any;\npublic mouseout: any;\npublic mouseover: any;\npublic mouseup: any;\npublic radiusChanged: any;\npublic rightclick: any;\npublic mapObject: google.maps.Circle;\npublic objectOptions: google.maps.CircleOptions = /** @type {?} */(( <google.maps.CircleOptions>{}));\n/**\n * @param {?} nguiMapComp\n */\nconstructor(private nguiMapComp: NguiMapComponent) {\n    super(nguiMapComp, 'Circle', INPUTS, OUTPUTS);\n  }\n/**\n * @return {?}\n */\ninitialize(): void {\n    super.initialize();\n    this.setCenter();\n  }\n/**\n * @return {?}\n */\nsetCenter(): void {\n    if (!this['center']) {\n      this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(\n        center => {\n\n          let /** @type {?} */ latLng = new google.maps.LatLng(center.coords.latitude, center.coords.longitude);\n          this.mapObject.setCenter(latLng);\n        },\n        error => {\n          console.error('ngui-map, error in finding the current position');\n          this.mapObject.setCenter(this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    } else if (typeof this['center'] === 'string') {\n      this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({address: this['center']}).subscribe(\n        results => {\n\n          this.mapObject.setCenter(results[0].geometry.location);\n        },\n        error => {\n          console.error('ngui-map, error in finding location from', this['center']);\n          this.mapObject.setCenter(this.objectOptions['geoFallbackCenter'] || new google.maps.LatLng(0, 0));\n        }\n      ));\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ngui-map>circle, ngui-map>map-circle',\n  inputs: INPUTS,\n  outputs: OUTPUTS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NguiMapComponent, },\n];\n}\n\nfunction Circle_tsickle_Closure_declarations() {\n/** @type {?} */\nCircle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCircle.ctorParameters;\n/** @type {?} */\nCircle.prototype.center;\n/** @type {?} */\nCircle.prototype.clickable;\n/** @type {?} */\nCircle.prototype.draggable;\n/** @type {?} */\nCircle.prototype.editable;\n/** @type {?} */\nCircle.prototype.fillColor;\n/** @type {?} */\nCircle.prototype.fillOpacity;\n/** @type {?} */\nCircle.prototype.map;\n/** @type {?} */\nCircle.prototype.radius;\n/** @type {?} */\nCircle.prototype.strokeColor;\n/** @type {?} */\nCircle.prototype.strokeOpacity;\n/** @type {?} */\nCircle.prototype.strokePosition;\n/** @type {?} */\nCircle.prototype.strokeWeight;\n/** @type {?} */\nCircle.prototype.visible;\n/** @type {?} */\nCircle.prototype.zIndex;\n/** @type {?} */\nCircle.prototype.options;\n/** @type {?} */\nCircle.prototype.geoFallbackCenter;\n/** @type {?} */\nCircle.prototype.centerChanged;\n/** @type {?} */\nCircle.prototype.click;\n/** @type {?} */\nCircle.prototype.dblclick;\n/** @type {?} */\nCircle.prototype.drag;\n/** @type {?} */\nCircle.prototype.dragend;\n/** @type {?} */\nCircle.prototype.dragstart;\n/** @type {?} */\nCircle.prototype.mousedown;\n/** @type {?} */\nCircle.prototype.mousemove;\n/** @type {?} */\nCircle.prototype.mouseout;\n/** @type {?} */\nCircle.prototype.mouseover;\n/** @type {?} */\nCircle.prototype.mouseup;\n/** @type {?} */\nCircle.prototype.radiusChanged;\n/** @type {?} */\nCircle.prototype.rightclick;\n/** @type {?} */\nCircle.prototype.mapObject;\n/** @type {?} */\nCircle.prototype.objectOptions;\n/** @type {?} */\nCircle.prototype.nguiMapComp;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}