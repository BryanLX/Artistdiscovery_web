{"version":3,"sources":["../tmp/directives/base-map-directive.ts"],"names":[],"mappings":"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","file":"base-map-directive.js","sourceRoot":"","sourcesContent":["import {EventEmitter, SimpleChanges, Output, OnInit, OnChanges, OnDestroy} from '@angular/core';\n\nimport { OptionBuilder } from '../services/option-builder';\nimport { NguiMap } from '../services/ngui-map';\nimport { NguiMapComponent } from '../components/ngui-map.component';\n/**\n * @abstract\n */\nexport abstract class BaseMapDirective implements OnInit, OnChanges, OnDestroy {\n  // this should be redefined on each childr directive\n   initialized$: EventEmitter<any> = new EventEmitter();\npublic mapObject: any;\npublic objectOptions: any;\npublic nguiMap: NguiMap;\npublic optionBuilder: OptionBuilder;\npublic libraryName: string;\n  protected _subscriptions = [];\n/**\n * @param {?} nguiMapComponent\n * @param {?} mapObjectName\n * @param {?} inputs\n * @param {?} outputs\n */\nconstructor(\n    protected nguiMapComponent: NguiMapComponent,\npublic    mapObjectName: string,\n    protected inputs: string[],\n    protected outputs: string[]\n  ) {\n    this.nguiMap = this.nguiMapComponent['nguiMap'];\n    this.optionBuilder = this.nguiMapComponent['optionBuilder'];\n    // all outputs must be initialized\n    this.outputs.forEach(output => this[output] = new EventEmitter());\n    this.mapObjectName = mapObjectName;\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (this.nguiMapComponent.mapIdledOnce) { // map is ready already\n      this.initialize();\n    } else {\n      this.nguiMapComponent.mapReady$.subscribe(map => this.initialize());\n    }\n  }\n/**\n * @return {?}\n */\ninitialize(): void {\n    this.objectOptions = this.optionBuilder.googlizeAllInputs(this.inputs, this);\n\n\n    // will be set after geocoded\n    typeof this.objectOptions.position === 'string' && (delete this.objectOptions.position);\n    typeof this.objectOptions.center === 'string' && (delete this.objectOptions.center);\n\n    // noinspection TypeScriptUnresolvedFunction\n    if (this.libraryName) {\n      this.mapObject = new google.maps[this.libraryName][this.mapObjectName](this.objectOptions);\n    } else {\n      this.mapObject = new google.maps[this.mapObjectName](this.objectOptions);\n    }\n    this.mapObject.setMap(this.nguiMapComponent.map);\n    this.mapObject['mapObjectName'] = this.mapObjectName;\n    this.mapObject['nguiMapComponent'] = this.nguiMapComponent;\n\n    // set google events listeners and emits to this outputs listeners\n    this.nguiMap.setObjectEvents(this.outputs, this, 'mapObject');\n\n    this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName, this.mapObject);\n    this.initialized$.emit(this.mapObject);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n\n    this.nguiMap.updateGoogleObject(this.mapObject, changes);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._subscriptions.map(subscription => subscription.unsubscribe());\n    this.nguiMapComponent.removeFromMapObjectGroup(this.mapObjectName, this.mapObject);\n\n    if (this.mapObject) {\n      this.nguiMap.clearObjectEvents(this.outputs, this, 'mapObject');\n    }\n  }\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'initialized$': [{ type: Output },],\n};\n}\n\nfunction BaseMapDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseMapDirective.propDecorators;\n/** @type {?} */\nBaseMapDirective.prototype.initialized$;\n/** @type {?} */\nBaseMapDirective.prototype.mapObject;\n/** @type {?} */\nBaseMapDirective.prototype.objectOptions;\n/** @type {?} */\nBaseMapDirective.prototype.nguiMap;\n/** @type {?} */\nBaseMapDirective.prototype.optionBuilder;\n/** @type {?} */\nBaseMapDirective.prototype.libraryName;\n/** @type {?} */\nBaseMapDirective.prototype._subscriptions;\n/** @type {?} */\nBaseMapDirective.prototype.nguiMapComponent;\n/** @type {?} */\nBaseMapDirective.prototype.mapObjectName;\n/** @type {?} */\nBaseMapDirective.prototype.inputs;\n/** @type {?} */\nBaseMapDirective.prototype.outputs;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}